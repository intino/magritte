defrule type(Box)
package magritte.editors;

import magritte.Model;
import magritte.boxes.Box;

import static magritte.Annotation.*;

public class $name extends Box {

    public static void load(Model model) {
        new $name(model).load();
    }

    private $name(Model model) {
        super(model);
    }

    @Override
    protected void loadDependencies() {
        $import...[$NL]
    }

    @Override
    protected void loadNodes() {
        $node...[$NL]
    }
}
endrule

defrule type(Node) trigger(node)
[/**
 * $doc
*/]\
[$add.]def(["$name"]);
	$annotation...[$NL]\
    $nodeType...[$NL]\
    $parent\
    $variable+set...[$NL]\
    $reference\
    $node...[$NL]\
end();
endrule

defrule trigger(import)
$value.load(model());
endrule

defrule type(nodeType) trigger(nodeType)
type("$name"[,$NL$target...[,$NL]]);
endrule

defrule trigger(parent)
parent("$value");
endrule

defrule type(reference) type(aggregated) trigger(reference)
add().def();
    type("$type");
end();
endrule

defrule type(reference) trigger(reference)
def();
    $parent
end();

endrule

defrule type(Variable) type(reference) slot-name(variableValue) trigger(set)
set("$name", node("$variableValue"));
endrule

defrule type(Variable) type(List) slot-name(variableValue) trigger(set)
set("$name", $variableValue);
endrule

defrule type(Variable) slot-name(variableValue)  trigger(set)
set("$name", $variableValue);
endrule

defrule type(Annotation) trigger(annotation)
set($value+CamelCase...[, ]);
endrule

defrule trigger(variableValue) slot-type(date)
new Date($value~L)
endrule

defrule trigger(variableValue) slot-type(coordinate)
Coordinate.of($value)
endrule