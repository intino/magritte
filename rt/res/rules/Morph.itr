defrule type(Morph)
package magritte.morphs[.$package+lowercase];

[import $import...[;$NL]]\
import magritte.Set;
import magritte.types.Enumerate;
import java.util.Date;
import magritte.wrappers.Morph;

$node
endrule


defrule type(Word) trigger(wordInstantiation)
public static enum $name+camelCase {$words+FirstUpperCase...[, ]}

endrule

defrule type(Word) type(List) trigger(getter)
public $name+reference$[] get$name+camelCase() {
	return Enumerate.cardinal(get("$name+lowerCamelCase", int$[].class), $name+CamelCase.values());
}

endrule

defrule type(Word) !type(List) trigger(getter)
public $name+reference get$name+camelCase() {
	return Enumerate.cardinal(get("$name", int.class), $name+reference.values());
}

endrule

defrule type(Word) type(List) trigger(setter)
public void set$name+camelCase($name+camelCase~... values) {
    set("$name", Enumerate.ordinal(values));
}

endrule

defrule type(Word) !type(List) trigger(setter)
public void set$name+camelCase($name+camelCase value) {
    set("$name", Enumerate.ordinal(value));
}

endrule

defrule type(Variable) !type(Word) trigger(getter)
public $type+reference get$name+camelCase() {
    return get("$name");
}

endrule

defrule type(Variable) !type(Word) trigger(setter)
public void set$name+camelCase($type+reference value) {
    set("$name", value);
}

endrule

defrule type(Variable) !type(Word) type(List) trigger(setter)
public void set$name+camelCase($type+camelCase $name+camelCase) {
    set("$name", $type+camelCase);
}

endrule

defrule type(declarednode) trigger(node)
public [$inner ]class $name+camelCase extends Morph {

	$variable+wordInstantiation...[$NL]\
    $variable+getter...[$NL]\

    $variable+setter...[$NL]\

    $node...[$NL]\

}
endrule