defrule type(model)
package magritte.store;

import magritte.Model;
import magritte.Node;
import magritte.editors.Box;
import magritte.store.*;
import magritte.editors.ModelEditor;
$importFacet...[$NL]

import static magritte.Tag.*;
$importMetric...[$NL]

public class $name extends Box.Unit {
    public static final Box box = new $name();

    @Override
    public Box$[] dependencies() {
        return new Box$[]{[magritte.store.metamodel.$language+firstUpperCase.box]};
    }

    @Override
    protected ModelEditor modelEditor(Model model) {
        return new ModelEditor(model) {
            @Override
            public void write() {
                $node...[$NL]
            }
        };
    }
}
endrule

defrule type(Node) trigger(node)
def($key)[.name("$name")][$nodeType...[]][$facet...[]][$address][$annotation...[]][.$parent][$variable+set...[]\][.componentOf($componentOf)][$include...[]];\
endrule

defrule trigger(nodeType)
.type("$value")
endrule

defrule type(facetapply) trigger(facet)
.type("$name"[, $apply])
endrule

defrule trigger(address)
.address($value)
endrule

defrule trigger(parent)
childOf("$value")
endrule

defrule type(aggregated) trigger(include)
.add($value)
endrule

defrule type(composed) trigger(include)
.has($value)
endrule

defrule type(variable) type(target) type(measure) !type(List) slot-name(variableValue) trigger(set)
.set("!$node:$name<$target", $measureValue.value($variableValue))
endrule

defrule type(variable) type(target) type(string) slot-name(variableValue) trigger(set)
.set("!$node:$name<$target", $variableValue+quoted...[, ])
endrule
defrule type(variable) type(target) type(word) slot-name(variableValue) trigger(set)
.set("!$node:$name<$target", $variableValue+quoted...[, ])
endrule

defrule type(variable) type(target) type(reference) slot-name(variableValue) trigger(set)
.set("!$node:$name<$target", node($variableValue...[, ]))
endrule

defrule type(variable) type(target) slot-name(variableValue) trigger(set)
.set("!$node:$name<$target", $variableValue...[, ])
endrule

defrule type(variable) type(reference) slot-name(variableValue) trigger(set)
.set("$terminal$name", node($variableValue+quoted...[, ]))
endrule

defrule type(Variable) type(resource) slot-name(variableValue) trigger(set)
.set("$terminal$name", resource($variableValue+quoted...[, ]))
endrule

defrule type(variable) type(word) slot-name(variableValue) trigger(set)
.set("$terminal$name", $variableValue+quoted...[, ])
endrule

defrule type(Variable) type(string) slot-name(variableValue) trigger(set)
.set("$terminal$name", $variableValue+quoted...[, ])
endrule

defrule type(Variable) slot-name(variableValue) trigger(set)
.set("$terminal$name", $variableValue...[, ])
endrule

defrule type(Annotation) trigger(annotation)
.set($value+CamelCase...[, ])
endrule

defrule trigger(variableValue) slot-type(date)
magritte.types.TimeInstant.value($value+date)
endrule

defrule trigger(variableValue) slot-type(coordinate)
magritte.types.Coordinate.of($value)
endrule

defrule trigger(quoted)
"$value"
endrule