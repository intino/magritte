defrule type(Model)
package siani.tara.dsls;

import siani.tara.semantic.model.Tara;
import java.util.Locale;
import siani.tara.semantic.model.Tag;
import static siani.tara.semantic.Relation.*;
import static siani.tara.semantic.constraints.RuleFactory.*;

public class $name extends Tara {
	public $name() {
		$node...[$NL]
	}

	@Override
	public String languageName() {
		return "$name";
	}

	@Override
    public Locale locale() {
        return $locale;
    }

    @Override
    public boolean isTerminalLanguage() {
        return $terminal;
    }
}

endrule

defrule type(node) trigger(node)
in("$name").def(context([$nodeType])[.$allows][.$requires][.$assumptions]);
endrule

defrule type(nodeType) trigger(nodeType)
$type+quoted...[, ]
endrule

defrule type(allows) trigger(allows)
allow([$allow...[, ]])
endrule

defrule type(allow) type(multiple) trigger(allow)
multiple($type+quoted[, $relation][, $tags+quoted...[, ]])
endrule

defrule type(allow) type(single) trigger(allow)
single($type+quoted[, $relation][, $tags+quoted...[, ]])
endrule

defrule type(allow) type(parameter) type(word) trigger(allow)
parameter("$name", new String$[]{$words+quoted...[, ]}, $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule type(allow) type(parameter) type(reference) trigger(allow)
parameter("$name", new String$[]{$types+quoted...[, ]}, $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule type(allow) type(parameter) trigger(allow)
parameter("$name", "$type", $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule type(allow) type(facet) trigger(allow)
facet("$value")[.require($require...[, ])][.allow($allow...[, ])]
endrule

defrule trigger(allow)
$value()
endrule


defrule type(requires) trigger(requires)
require([$require...[, ]])
endrule

defrule type(require) type(oneOf) trigger(require)
oneOf([$require...[, ]])
endrule

defrule type(require) type(multiple) trigger(require)
_multiple($type+quoted[, $relation][, $tags+quoted...[, ]])
endrule

defrule type(require) type(single) trigger(require)
_single($type+quoted[, $relation][, $tags+quoted...[, ]])
endrule

defrule trigger(tags)
Tag.$value
endrule

defrule type(require) !type(parameter) type(none) trigger(require)
_noneIncludes()
endrule

defrule type(require) type(parameter) type(none) trigger(require)
_noneParameter()
endrule

defrule type(require) type(parameter) type(word) trigger(require)
_parameter("$name", new String$[]{$words+quoted...[, ]}, $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule type(require) type(parameter) type(reference) trigger(require)
_parameter("$name", new String$[]{$types+quoted...[, ]}, $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule type(require) type(parameter) trigger(require)
_parameter("$name", "$type", $multiple, $position, "$metric"[, $annotations+quoted...[, ]])
endrule

defrule trigger(quoted)
"$value"
endrule

defrule trigger(require)
_$value()
endrule

defrule type(assumptions) trigger(assumptions)
assume($assumption...[, ])
endrule

defrule trigger(assumption)
is$value+firstUpperCase()
endrule