defrule type(Morph)
package magritte.morphs;

import magritte.Node;
import magritte.Set;

$morph
endrule

defrule type(MorphClass) trigger(morph)
public class $name+UpperCamelCase extends $NodeType {

	$word...[$NL]

	getter...[$NL]
	setter...[$NL]
	wordGetter...[$NL]
	wordSetter...[$NL]
	innerGetter...[$NL]
	innerSetter...[$NL]
	morph...[]
}
endrule

defrule type(Word) type(list) trigger(word)
public static enum $Name+UpperCamelCase {
    words...[, ];

    private static int[] ordinal($Name+UpperCamelCase[] values) {
        int[] result = new int[values.length];
        for (int i = 0; i < result.length; i++) result[i] = values[i].ordinal();
        return result;
    }

    private static $Name+UpperCamelCase[] cardinal(int[] values) {
        if (values == null) values = new int[0];
        $Name+UpperCamelCase[] result = new $Name+UpperCamelCase[values.length];
        for (int i = 0; i < result.length; i++) result[i] = cardinal(values[i]);
        return result;
    }

    private static $Name+UpperCamelCase cardinal(int value) {
        return $Name+UpperCamelCase.values()[value];
    }
}

endrule

defrule type(Word) trigger(word)
public static enum $Name+UpperCamelCase {
    words...[, ];

    private static $Name+UpperCamelCase ordinal(Integer value) {
        return value == null ? null : $Name+UpperCamelCase.values()[value];
    }
}
endrule

defrule type(var) trigger(getter)
public $type+UpperCamelCase getName() {
    return get("$name", $type+UpperCamelCase.class);
}

endrule

defrule type(var) trigger(setter)
public void set$Name+UpperCamelCase($type+UpperCamelCase) {
    return set("$Name", $type+UpperCamelCase.class);
}
endrule

defrule type(var) type(list) trigger(getter)
public $type+UpperCamelCase getName() {
    return get("$name", $type+UpperCamelCase.class);
}
endrule

defrule type(var) type(list) trigger(setter)
public void set$Name+UpperCamelCase($type+UpperCamelCase) {
    return set("$Name", $type+UpperCamelCase.class);
}
endrule

defrule type(Word) type(list) trigger(wordGetter)
public $name+UpperCamelCase[] getName() {
    return $name+UpperCamelCase.cardinal(get("$name+lowerCamelCase", int[].class));
}
endrule

defrule type(Word) trigger(wordSetter)
public void set$Name+UpperCamelCase($type+UpperCamelCase) {
    return get("$Name", $type+UpperCamelCase.class);
}
endrule