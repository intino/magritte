def type(model)
    package magritte.store;

    $importFacet...[$NL]
    import static magritte.Tag.*;
    $importMetric...[$NL]

    public class $name extends magritte.handlers.Box.$terminal {
        public static final magritte.handlers.Box box = new $name();

        @Override
        public magritte.handlers.Box$[] dependencies() {
            return new magritte.handlers.Box$[]{[magritte.store.$language+firstUpperCase.box]};
        }

        @Override
        public void doWrite() {
            $node...[$NL]
        }
    }
end

def trigger(terminal) value(true)
	Terminal
end
def trigger(terminal) value(false)
	Unit
end

def type(Node) trigger(node)
    edit($key)[.name("$name")][$nodeType...[]][$facet...[]][$address][$annotation...[]][.$parent][$variable...[]][.owner($componentOf)][$include...[]];
end

def trigger(nodeType)
    .type("$value")
end

def type(facetapply) trigger(facet)
    .type("$name"[, $apply])
end

def trigger(address)
    .address($value)
end

def trigger(parent)
    childOf("$value")
end

def type(aggregated) trigger(include)
    .hasHoldings($value)
end

def type(composed) trigger(include)
    .hasComponents($value)
end

def type(variable) type(target) type(measure) !type(List) slot(variableValue) trigger(variable)
    .set("!$node:$name<$target", $measureValue.value($variableValue))
end

def type(variable) type(target) type(string) slot(variableValue) trigger(variable)
    .set("!$node:$name<$target", $variableValue+quoted...[, ])
end
def type(variable) type(target) type(word) slot(variableValue) trigger(variable)
    .set("!$node:$name<$target", $variableValue+quoted...[, ])
end

def type(variable) type(target) type(reference) slot(variableValue) trigger(variable)
    .set("!$node:$name<$target", node($variableValue...[, ]))
end

def type(variable) type(target) slot(variableValue) trigger(variable)
    .set("!$node:$name<$target", $variableValue...[, ])
end

def type(variable) type(reference) slot(variableValue) trigger(variable)
    .set("$terminal$name", node($variableValue...[, ]))
end

def type(variable) type(native) slot(variableValue) trigger(variable)
    .set("$terminal$name", (Class<magritte.handlers.NativeContainer>) $variableValue)
end

def type(Variable) type(resource) slot(variableValue) trigger(variable)
    .set("$terminal$name", resource($variableValue+quoted...[, ]))
end

def type(variable) type(word) slot(variableValue) trigger(variable)
    .set("$terminal$name", $variableValue+quoted...[, ])
end

def type(Variable) type(string) slot(variableValue) trigger(variable)
    .set("$terminal$name", $variableValue+quoted...[, ])
end

def type(Variable) slot(variableValue) trigger(variable)
    .set("$terminal$name", $variableValue+quoted...[, ])
end

def type(Variable) trigger(variable)
end

def type(Annotation) trigger(annotation)
    .set($value+CamelCase...[, ])
end

def trigger(variableValue) slot(date)
    magritte.types.TimeInstant.value($value+date)
end

def trigger(variableValue) slot(coordinate)
    magritte.types.Coordinate.of($value)
end

def trigger(quoted)
    "$value"
end