<idea-plugin version="1" url="http://tara.siani.es">
  <id>siani.dev.tara</id>
  <depends>org.intellij.intelliLang</depends>
  <name>Tara</name>
  <version>
    1.0
  </version>
  <vendor email="support.tara@siani.es" url="http://www.siani.es">Tara Modeling Language</vendor>

  <description>
    <![CDATA[
        <p>Tara is a modeling language oriented to define Domain Specific Languages (DSL). It supports the Model Driven
        Engineering methodology (MDE) to create the different abstraction levels: system, model and metamodel.
        To get started visit <a href="http://tara.siani.es/gettingstarted">http://tara.siani.es/gettingstarted</a>.</p>

        <p>Download the Tara SDK from <a href="http://tara.siani.es/downloads">http://tara.siani.es/downloads</a></p>
      ]]>
  </description>

  <change-notes>##change-notes##</change-notes>
  <actions>
    <action id="NewTaraFile" class="siani.tara.intellij.actions.CreateTaraFileAction">
      <add-to-group group-id="NewGroup" anchor="first"/>
    </action>
    <action id="NewPackage" class="siani.tara.intellij.actions.CreatePackageAction" text="Package"
            description="Create a new package" icon="AllIcons.Nodes.Package">
    </action>
    <group id="TaraMenu" text="Tara" description="Tara Menu">
      <add-to-group group-id="MainMenu" anchor="last"/>
      <action id="ExportModel" class="siani.tara.intellij.actions.ExportLanguage" text="Export Language"
              description="Export Language">
        <keyboard-shortcut keymap="$default" first-keystroke="control shift E"/>
      </action>
      <!--<action id="ImportLanguage" class="siani.tara.intellij.actions.ImportLanguage" text="Import Language"-->
      <!--description="Import Language">-->
      <!--<keyboard-shortcut keymap="$default" first-keystroke="control shift I"/>-->
      <!--</action>-->
      <action id="tara.Generate" class="siani.tara.intellij.actions.GenerateAction" text="Link to Java">
        <keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>
        <add-to-group group-id="ToolsMenu" anchor="before" relative-to-action="com.intellij.tools.ExternalToolsGroup"/>
        <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
      </action>
    </group>

    <action id="siani.tara.intellij.actions.SubmitFeedbackAction"
            class="siani.tara.intellij.actions.SubmitFeedbackAction"
            text="Submit Tara Feedback" description="You can report a bug or suggestion of plugin">
      <add-to-group group-id="HelpMenu" anchor="before" relative-to-action="TechnicalSupport"/>
    </action>
  </actions>

  <change-notes><![CDATA[ ]]>
  </change-notes>

  <idea-version since-build="133.375"/>

  <extensions defaultExtensionNs="com.intellij">
    <!--<fileDocumentManagerListener implementation="siani.tara.intellij.codegeneration.TaraFileDocumentManagerListener"/>-->
    <errorHandler implementation="siani.tara.intellij.diagnostic.errorreporting.PluginErrorReportSubmitter"/>
    <lang.namesValidator language="Tara"
                         implementationClass="siani.tara.intellij.refactoring.rename.NamesValidator"/>
    <projectService serviceInterface="siani.tara.intellij.lang.psi.TaraElementFactory"
                    serviceImplementation="siani.tara.intellij.lang.psi.impl.TaraElementFactoryImpl"/>
    <treeStructureProvider implementation="siani.tara.intellij.project.view.MergerTreeStructureProvider"/>
    <fileTemplateGroup implementation="siani.tara.intellij.actions.TaraTemplatesFactory"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.TaraToNative"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.FacetApplyMarker"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.TaraOverriddenNode"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.TaraFacetOverriddenNode"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.TaraOverriddenVariable"/>
    <codeInsight.lineMarkerProvider language="Tara"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.TaraMethodSeparatorProvider"/>
    <codeInsight.lineMarkerProvider language="JAVA"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.JavaNativeToTara"/>
    <codeInsight.lineMarkerProvider language="JAVA"
                                    implementationClass="siani.tara.intellij.codeinsight.linemarkers.JavaFacetToTara"/>
    <gotoRelatedProvider implementation="siani.tara.intellij.codeinsight.TaraRelatedFilesProvider"/>
    <compileServer.plugin classpath="tara-jps-plugin.jar"/>
    <projectService serviceInterface="siani.tara.intellij.compiler.TaraCompilerWorkspaceConfiguration"
                    serviceImplementation="siani.tara.intellij.compiler.TaraCompilerWorkspaceConfiguration"/>
    <projectService serviceInterface="siani.tara.intellij.compiler.TaraCompilerConfiguration"
                    serviceImplementation="siani.tara.intellij.compiler.TaraCompilerConfiguration"/>
    <facetType implementation="siani.tara.intellij.project.facet.TaraFacetType"/>
    <framework.type implementation="siani.tara.intellij.framework.TaraFrameworkType"/>
    <lang.commenter language="Tara" implementationClass="siani.tara.intellij.TaraCommenter"/>
    <languageInjector implementation="siani.tara.intellij.codeinsight.TaraLanguageInjector"/>

    <lang.documentationProvider language="Tara"
                                implementationClass="siani.tara.intellij.documentation.TaraDocumentationProvider"/>
    <fileTypeFactory implementation="siani.tara.intellij.lang.file.TaraFileTypeFactory"/>
    <lang.parserDefinition language="Tara"
                           implementationClass="siani.tara.intellij.lang.parser.TaraParserDefinition"/>
    <lang.syntaxHighlighterFactory key="Tara"
                                   implementationClass="siani.tara.intellij.highlighting.TaraSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="siani.tara.intellij.highlighting.TaraColorSettingPage"/>

    <lang.braceMatcher language="Tara" implementationClass="siani.tara.intellij.highlighting.TaraBraceMatcher"/>
    <quoteHandler fileType="Tara" className="siani.tara.intellij.codeinsight.TaraQuoteHandler"/>

    <annotator language="Tara" implementationClass="siani.tara.intellij.annotator.ReferenceAnnotator"/>
    <annotator language="Tara" implementationClass="siani.tara.intellij.annotator.NodeAnnotator"/>
    <annotator language="Tara" implementationClass="siani.tara.intellij.annotator.DSLDeclarationAnnotator"/>
    <!--<annotator language="Tara" implementationClass="siani.tara.intellij.annotator.MeasureVariableAnnotator"/>-->
    <annotator language="Tara" implementationClass="siani.tara.intellij.annotator.VariableAnnotator"/>
    <annotator language="Tara" implementationClass="siani.tara.intellij.annotator.NameIdentifierValidator"/>

    <completion.contributor language="Tara"
                            implementationClass="siani.tara.intellij.codeinsight.completion.TaraNodeCompletionContributor"/>
    <completion.contributor language="Tara"
                            implementationClass="siani.tara.intellij.codeinsight.completion.TaraPrimitivesCompletionContributor"/>
    <completion.contributor language="Tara"
                            implementationClass="siani.tara.intellij.codeinsight.completion.TaraAnnotationsCompletionContributor"/>
    <lang.psiStructureViewFactory language="Tara"
                                  implementationClass="siani.tara.intellij.structureview.StructureViewFactory"/>
    <!--<psi.referenceContributor implementation="siani.tara.intellij.model.psi.resolve.TaraReferenceContributor"/>-->
    <nameSuggestionProvider implementation="siani.tara.intellij.refactoring.NameSuggestionProvider"/>
    <lang.elementManipulator forClass="siani.tara.intellij.lang.psi.TaraIdentifier"
                             implementationClass="siani.tara.intellij.lang.psi.impl.IdentifierManipulator"/>
    <codeInsight.parameterInfo language="Tara"
                               implementationClass="siani.tara.intellij.codeinsight.parameterinfo.TaraParameterInfoHandler"/>
    <lang.refactoringSupport language="Tara"
                             implementationClass="siani.tara.intellij.TaraRefactoringSupportProvider"/>
    <renameHandler implementation="siani.tara.intellij.refactoring.rename.RenameHandler"/>
    <lang.findUsagesProvider language="Tara"
                             implementationClass="siani.tara.intellij.lang.psi.resolve.TaraFindUsagesProvider"/>
    <lang.foldingBuilder language="Tara" implementationClass="siani.tara.intellij.TaraFoldingBuilder"/>
    <projectService serviceInterface="siani.tara.intellij.codeinsight.JavaHelper"
                    serviceImplementation="siani.tara.intellij.codeinsight.JavaHelper$Impl"/>
    <!--<referenceImporter implementation="siani.tara.intellij.annotator.imports.TaraReferenceImporter"/>-->
    <!--<model.formatter locale="Tara" implementationClass="siani.tara.intellij.formatter.TaraFormattingModelBuilder"/>-->
    <!--<moveFileHandler implementation="siani.tara.intellij.refactoring.move.TaraFileMoveHandler"/>-->
    <refactoring.moveHandler implementation="siani.tara.intellij.refactoring.move.TaraMoveNode"/>
    <lang.importOptimizer language="Tara"
                          implementationClass="siani.tara.intellij.codeinsight.imports.TaraImportOptimizer"/>
    <findUsagesHandlerFactory implementation="siani.tara.intellij.findusage.TaraFindUsagesHandlerFactory" id="Tara"
                              order="last, before default"/>
    <intentionAction>
      <className>siani.tara.intellij.codeinsight.intentions.InlineToIndentConverter</className>
      <category>Indent Operator</category>
      <descriptionDirectoryName>InlineToIndentConverter</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>siani.tara.intellij.codeinsight.intentions.IndentToInlineConverter</className>
      <category>Indent Operator</category>
      <descriptionDirectoryName>IndentToInlineConverter</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>siani.tara.intellij.codeinsight.intentions.ImplicitToExplicitParameters</className>
      <category>Parameter View Operator</category>
      <descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
    </intentionAction>
    <intentionAction>
      <className>siani.tara.intellij.codeinsight.intentions.ExplicitToImplicitParameters</className>
      <category>Parameter View Operator</category>
      <descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
    </intentionAction>
    <spellchecker.support language="Tara"
                          implementationClass="siani.tara.intellij.codeinsight.TaraSpellcheckerStrategy"/>

    <extendWordSelectionHandler implementation="siani.tara.intellij.lang.psi.TaraStringLiteralSelectionHandler"/>
    <!--<basicWordSelectionFilter implementation="siani.tara.intellij.lang.psi.TaraBasicWordSelectionFilter"/>-->
    <lang.elementManipulator forClass="siani.tara.intellij.lang.psi.Expression"
                             implementationClass="siani.tara.intellij.lang.psi.TaraExpressionManipulator"/>
  </extensions>
  <project-components>
    <component>
      <implementation-class>siani.tara.intellij.project.TaraCompilerListener</implementation-class>
    </component>
  </project-components>

  <application-components>
  </application-components>
</idea-plugin>