{
  parserClass='monet.tara.intellij.metamodel.parser.TaraParser'
  parserUtilClass="monet.tara.intellij.metamodel.parser.TaraParserUtil"

  extends='com.intellij.extapi.psi.ASTWrapperPsiElement'

  psiClassPrefix='Tara'
  psiImplClassSuffix='Impl'
  psiPackage='monet.tara.intellij.metamodel.psi'
  psiImplPackage='monet.tara.intellij.metamodel.psi.impl'

  elementTypeHolderClass='monet.tara.intellij.metamodel.psi.TaraTypes'
  elementTypeClass='monet.tara.intellij.metamodel.psi.TaraElementType'
  tokenTypeClass='monet.tara.intellij.metamodel.psi.TaraTokenType'

  psiImplUtilClass='monet.tara.intellij.metamodel.psi.impl.TaraPsiImplUtil'
}

root ::= (concept | NEWLINE)*

concept ::= doc? signature annotations? body?
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.ConceptMixin'
implements='monet.tara.intellij.metamodel.psi.Concept'
}

signature ::= CONCEPT_KEY (COLON referenceIdentifier)?  (polymorphic | modifier? morph?) identifier
{ pin=1 mixin= 'monet.tara.intellij.metamodel.psi.impl.SignatureMixin'
implements='monet.tara.intellij.metamodel.psi.Signature'
}

body ::= NEW_LINE_INDENT (conceptConstituents NEWLINE+)+ DEDENT
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.BodyMixin'
implements='monet.tara.intellij.metamodel.psi.Body'
}

private conceptConstituents ::= attribute
		                      | referenceStatement
		                      | word
		                      | concept
		                      | conceptInjection

referenceStatement::= VAR referenceIdentifier LIST? variableNames
{mixin= 'monet.tara.intellij.metamodel.psi.impl.ReferenceStatementMixin'
implements='monet.tara.intellij.metamodel.psi.ReferenceStatement'}
conceptInjection::= NEW referenceIdentifier annotations?
{mixin= 'monet.tara.intellij.metamodel.psi.impl.ConceptInjectionMixin'
implements='monet.tara.intellij.metamodel.psi.ConceptInjection'}

attribute::= VAR     UID_TYPE IDENTIFIER_KEY (COLON stringValue)?
           | VAR     INT_TYPE (variableNames | IDENTIFIER_KEY COLON integerValue | LIST IDENTIFIER_KEY (COLON integerList)?)
           | VAR  DOUBLE_TYPE (variableNames | IDENTIFIER_KEY COLON doubleValue | LIST IDENTIFIER_KEY (COLON doubleList)?)
           | VAR NATURAL_TYPE (variableNames | IDENTIFIER_KEY COLON naturalValue | LIST IDENTIFIER_KEY (COLON naturalList)?)
           | VAR BOOLEAN_TYPE (variableNames | IDENTIFIER_KEY COLON booleanValue | LIST IDENTIFIER_KEY (COLON booleanList)?)
           | VAR  STRING_TYPE (variableNames | IDENTIFIER_KEY COLON stringValue | LIST IDENTIFIER_KEY (COLON stringList)?)
{mixin= 'monet.tara.intellij.metamodel.psi.impl.AttributeMixin'
implements='monet.tara.intellij.metamodel.psi.Attribute'}

word::= VAR WORD_KEY IDENTIFIER_KEY NEW_LINE_INDENT (IDENTIFIER_KEY NEWLINE)+ DEDENT
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.WordMixin'
implements='monet.tara.intellij.metamodel.psi.Word'
}

stringValue  ::= STRING_VALUE_KEY
booleanValue ::= BOOLEAN_VALUE_KEY
integerValue ::= NATURAL_VALUE_KEY | NEGATIVE_VALUE_KEY
doubleValue  ::= NATURAL_VALUE_KEY | NEGATIVE_VALUE_KEY | DOUBLE_VALUE_KEY
naturalValue ::= NATURAL_VALUE_KEY

stringList ::= LEFT_SQUARE STRING_VALUE_KEY+ RIGHT_SQUARE;
booleanList::= LEFT_SQUARE BOOLEAN_VALUE_KEY+ RIGHT_SQUARE;
integerList::= LEFT_SQUARE (NATURAL_VALUE_KEY | NEGATIVE_VALUE_KEY)+ RIGHT_SQUARE;
doubleList ::= LEFT_SQUARE (NATURAL_VALUE_KEY | NEGATIVE_VALUE_KEY | DOUBLE_VALUE_KEY)+ RIGHT_SQUARE;
naturalList::= LEFT_SQUARE NATURAL_VALUE_KEY+ RIGHT_SQUARE;

annotations ::= OPEN_AN (GENERIC | MULTIPLE | OPTIONAL | HAS_CODE | EXTENSIBLE | SINGLETON | ROOT)+ CLOSE_AN
{mixin= 'monet.tara.intellij.metamodel.psi.impl.AnnotationsMixin'
implements='monet.tara.intellij.metamodel.psi.Annotations'}

variableNames::= IDENTIFIER_KEY (COMMA IDENTIFIER_KEY)*;

modifier::= ABSTRACT
          | FINAL

polymorphic::= POLYMORPHIC_KEY
morph::= MORPH_KEY

doc::= DOC_LINE+
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.DocMixin'
implements='monet.tara.intellij.metamodel.psi.Doc'
}
referenceIdentifier::= identifier child* {
pin=1
mixin= 'monet.tara.intellij.metamodel.psi.impl.ReferenceIdentifierMixin'
implements='monet.tara.intellij.metamodel.psi.ReferenceIdentifier'}

private child ::= DOT identifier {pin=1}

identifier::=  IDENTIFIER_KEY
{mixin= 'monet.tara.intellij.metamodel.psi.impl.IdentifierMixin'
implements='monet.tara.intellij.metamodel.psi.Identifier'}