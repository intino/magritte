{
  parserClass='monet.tara.intellij.metamodel.parser.TaraParser'
  parserUtilClass="monet.tara.intellij.metamodel.parser.TaraParserUtil"

  extends='com.intellij.extapi.psi.ASTWrapperPsiElement'

  psiClassPrefix='Tara'
  psiImplClassSuffix='Impl'
  psiPackage='monet.tara.intellij.metamodel.psi'
  psiImplPackage='monet.tara.intellij.metamodel.psi.impl'

  elementTypeHolderClass='monet.tara.intellij.metamodel.psi.TaraTypes'
  elementTypeClass='monet.tara.intellij.metamodel.psi.TaraElementType'
  tokenTypeClass='monet.tara.intellij.metamodel.psi.TaraTokenType'

  psiImplUtilClass='monet.tara.intellij.metamodel.psi.impl.TaraPsiImplUtil'
}

root ::= (concept | NEWLINE)*

concept ::= doc? signature annotations? body?
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.ConceptMixin'
implements='monet.tara.intellij.metamodel.psi.Concept'
}

signature ::= CONCEPT_KEY extendedConcept?  (polymorphic | modifier? morph?)  AS identifier
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.SignatureMixin'
implements='monet.tara.intellij.metamodel.psi.Signature'
}

body ::= NEW_LINE_INDENT (conceptConstituents NEWLINE+)+ DEDENT
{ mixin= 'monet.tara.intellij.metamodel.psi.impl.BodyMixin'
implements='monet.tara.intellij.metamodel.psi.Body'
}

private conceptConstituents ::= attribute
		                      | referenceStatement
		                      | word
		                      | concept
		                      | conceptInjection

referenceStatement::= VAR extendedConcept LIST? IDENTIFIER_KEY
conceptInjection::= NEW extendedConcept annotations?
attribute::= VAR     UID_TYPE IDENTIFIER_KEY stringAssign?
           | VAR     INT_TYPE (IDENTIFIER_KEY integerAssign? | LIST IDENTIFIER_KEY integerListAssign?)
           | VAR  DOUBLE_TYPE (IDENTIFIER_KEY doubleAssign?  | LIST IDENTIFIER_KEY doubleListAssign?)
           | VAR NATURAL_TYPE (IDENTIFIER_KEY naturalAssign? | LIST IDENTIFIER_KEY naturalListAssign?)
           | VAR BOOLEAN_TYPE (IDENTIFIER_KEY booleanAssign? | LIST IDENTIFIER_KEY booleanListAssign?)
           | VAR  STRING_TYPE (IDENTIFIER_KEY stringAssign?  | LIST IDENTIFIER_KEY stringListAssign?)
{mixin= 'monet.tara.intellij.metamodel.psi.impl.TaraAttributeMixin'
implements='monet.tara.intellij.metamodel.psi.Attribute'}

word::= VAR WORD_KEY IDENTIFIER_KEY NEW_LINE_INDENT (IDENTIFIER_KEY NEWLINE)+ DEDENT

stringAssign   ::= ASSIGN STRING_VALUE
booleanAssign  ::= ASSIGN BOOLEAN_VALUE
integerAssign  ::= ASSIGN integerValue
doubleAssign   ::= ASSIGN (integerValue | DOUBLE_VALUE)
naturalAssign  ::= ASSIGN NATURAL_VALUE

stringListAssign   ::= ASSIGN LEFT_SQUARE STRING_VALUE+ RIGHT_SQUARE
booleanListAssign  ::= ASSIGN LEFT_SQUARE BOOLEAN_VALUE+ RIGHT_SQUARE
integerListAssign  ::= ASSIGN LEFT_SQUARE integerValue+ RIGHT_SQUARE
doubleListAssign   ::= ASSIGN LEFT_SQUARE (integerValue | DOUBLE_VALUE)+ RIGHT_SQUARE
naturalListAssign  ::= ASSIGN LEFT_SQUARE NATURAL_VALUE+ RIGHT_SQUARE

annotations ::= OPEN_AN (MULTIPLE | OPTIONAL | HAS_CODE | EXTENSIBLE| SINGLETON | ROOT)+ CLOSE_AN {methods=[getAnnotations]}

private integerValue::= NATURAL_VALUE
              | NEGATIVE_VALUE

modifier::= ABSTRACT
          | FINAL

polymorphic::= POLYMORPHIC_KEY
morph::= MORPH_KEY

doc::= DOC_LINE+

extendedConcept::= identifier (DOT identifier)*

identifier::=  IDENTIFIER_KEY
{mixin= 'monet.tara.intellij.metamodel.psi.impl.TaraIdentifierMixin' methods=[getIdentifier]}