<idea-plugin version="1">
  <id>siani.dev.tara</id>
  <name>Tara Plugin</name>
  <version>1.0</version>
  <vendor email="octavioroncal@siani.es" url="http://www.monet.org">Siani</vendor>

  <description><![CDATA[
      Enter short description for your plugin here.<br>
      <small>most HTML tags may be used</small>
      ]]></description>

  <change-notes><![CDATA[
      Add change notes here.<br>
      <small>most HTML tags may be used</small>
      ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="133.331"/>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <actions>
    <action id="NewMetamodelUnit" class="monet.tara.intellij.actions.CreateTaraFileAction">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewGroup1"/>
    </action>
    <!--<group id="tara.file.group" popup="false">-->
    <!--<action id="tara.Generate" class="monet.tara.compilerntellij.actions.GenerateAction" text="Generate Plugin">-->
    <!--<keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>-->
    <!--</action>-->
    <!--<add-to-group group-id="ToolsMenu" anchor="before" relative-to-action="com.intellij.tools.ExternalToolsGroup"/>-->
    <!--<add-to-group group-id="EditorPopupMenu" anchor="last"/>-->
    <!--<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>-->
    <!--</group>-->
  </actions>

  <application-components>
  </application-components>

  <extensions defaultExtensionNs="com.intellij">
    <lang.namesValidator language="Tara"
                         implementationClass="monet.tara.intellij.refactoring.rename.TaraNamesValidator"/>
    <projectService serviceInterface="monet.tara.intellij.psi.TaraElementFactory"
                    serviceImplementation="monet.tara.intellij.psi.impl.TaraElementFactoryImpl"/>
    <internalFileTemplate name="Metamodel Unit"/>
    <moduleType id="TARA_MODULE" implementationClass="monet.tara.intellij.project.module.TaraModuleType"/>

    <projectConfigurable instance="monet.tara.intellij.compiler.TaraCompilerConfigurable" id="Tara compiler"
                         displayName="Tara Compiler" parentId="project.propCompiler"/>

    <compileServer.plugin classpath="tara-jps-plugin.jar"/>
    <projectService serviceInterface="monet.tara.intellij.compiler.TaraCompilerWorkspaceConfiguration"
                    serviceImplementation="monet.tara.intellij.compiler.TaraCompilerWorkspaceConfiguration"/>
    <projectService serviceInterface="monet.tara.intellij.compiler.TaraCompilerConfiguration"
                    serviceImplementation="monet.tara.intellij.compiler.TaraCompilerConfiguration"/>
    <configurationType implementation="monet.tara.intellij.project.runner.TaraRunConfigurationType"/>
    <lang.commenter language="Tara" implementationClass="monet.tara.intellij.TaraCommenter"/>
    <lang.documentationProvider language="Tara"
                                implementationClass="monet.tara.intellij.documentation.TaraDocumentationProvider"/>
    <fileTemplateGroup implementation="monet.tara.intellij.project.TaraTemplatesFactory"/>
    <fileTypeFactory implementation="monet.tara.intellij.metamodel.file.TaraFileTypeFactory"/>
    <lang.parserDefinition language="Tara"
                           implementationClass="monet.tara.intellij.metamodel.TaraParserDefinition"/>
    <lang.syntaxHighlighterFactory key="Tara"
                                   implementationClass="monet.tara.intellij.highlighting.TaraSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="monet.tara.intellij.highlighting.TaraColorSettingPage"/>
    <annotator language="Tara" implementationClass="monet.tara.intellij.TaraAnnotator"/>
    <globalInspection language="Tara" shortName="UnusedConcept" bundle="messages.TaraBundle"
                      key="unused.concept.inspection.display.name"
                      groupKey="tara.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                      implementationClass="monet.tara.intellij.codeinspection.UnusedAbstractConceptInspection"/>
    <!--<globalInspection shortName="DuplicateConceptInspection" bundle="messages.TaraBundle"-->
    <!--key="duplicate.concept.display.name"-->
    <!--groupKey="group.names.tara.files" enabledByDefault="false" level="WARNING"-->
    <!--implementationClass="DuplicateConceptInspection"/>-->
    <!--<completion.contributor language="Tara"-->
    <!--implementationClass="TaraCompletionContributor"/>-->
    <psi.referenceContributor language="Tara" implementation="monet.tara.intellij.TaraReferenceContributor"/>
    <nameSuggestionProvider implementation="monet.tara.intellij.refactoring.TaraNameSuggestionProvider"/>
    <lang.elementManipulator forClass="monet.tara.compiler.intellij.psi.TaraIdentifier"
                             implementationClass="monet.tara.intellij.psi.impl.TaraConceptIdentifierManipulator"/>
    <lang.refactoringSupport language="Tara"
                             implementationClass="monet.tara.intellij.TaraRefactoringSupportProvider"/>
    <renameHandler implementation="monet.tara.intellij.refactoring.TaraRenameHandler"/>
    <lang.findUsagesProvider language="Tara"
                             implementationClass="monet.tara.intellij.metamodel.TaraFindUsagesProvider"/>
    <lang.foldingBuilder language="Tara" implementationClass="monet.tara.intellij.TaraFoldingBuilder"/>
    <!--<lang.formatter language="Tara" implementationClass="monet.tara.intellij.TaraFormattingModelBuilder"/>-->
  </extensions>
</idea-plugin>