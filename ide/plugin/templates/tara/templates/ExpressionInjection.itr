def type(native & java)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	public class $name+firstUpperCase implements tara.magritte.Expression<$type+javaType> {
		$nativeContainer self;

		public $type+javaType value() {$NL[\t\t$return]
end

def type(function & java)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	public class $name+firstUpperCase implements [$generatedLanguage+lowercase.functions.]$rule+firstUpperCase, tara.magritte.Function {
		$nativeContainer self;

		@Override
		$signature {$NL[\t\t$return]
end


def type(native & groovy)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	@SuppressWarnings("UnnecessaryQualifiedReference")
	class $name+firstUpperCase implements tara.magritte.Expression<$type+javaType> {
		$nativeContainer self;

		public $type+javaType value() {$NL$TAB$TAB$return
end


def type(function & groovy)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	@SuppressWarnings("UnnecessaryQualifiedReference")
	class $name+firstUpperCase implements [$generatedLanguage+lowercase.functions.]$rule+firstUpperCase, tara.magritte.Function {
		$nativeContainer self;

		$signature {$NL$TAB$TAB$return
end

def type(native & kotlin)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	class $name+firstUpperCase : tara.magritte.Expression<$type+javaType> {
		internal var self: $nativeContainer+reference

		override fun value():$type+javaType {$NL$TAB$TAB$return

end


def type(function & kotlin)
	package $generatedLanguage+LowerCase.natives;

	$imports...[$NL]

	class $name+firstUpperCase implements [$generatedLanguage+lowercase.functions.]$rule+firstUpperCase, tara.magritte.Function {
		internal var self: $nativeContainer+reference

		$signature {$NL$TAB$TAB$return
end


def value(date) trigger(javaType)
	java.time.LocalDateTime
end

def value(time) trigger(javaType)
	java.time.LocalTime
end

def value(resource) trigger(javaType)
	java.net.URL
end