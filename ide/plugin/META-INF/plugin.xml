<idea-plugin version="1" url="http://tara.siani.es">
    <id>siani.dev.tara</id>
    <depends>org.intellij.intelliLang</depends>
    <depends>org.jetbrains.idea.maven</depends>

    <name>Tara</name>
    <version>1.0.6</version>
    <vendor email="tara@siani.es" url="http://www.siani.es">Siani</vendor>
    <change-notes><![CDATA[
        <p>Spanish dictionary supported.</p>
        ]]>
    </change-notes>
    <idea-version since-build="143.375"/>
    <description>
        <![CDATA[
        <p>Tara is a framework for Software Product Line that provides it own DSL. Supported on Model Driven
        Engineering methodology (MDE) make easy the task of creating software product lines.
        To get started visit <a href="http://www.tara.siani.es/getting-started.html">tara.siani.es/gettingstarted</a>.</p>
      ]]>
    </description>

    <extensions defaultExtensionNs="com.intellij">Â´
        <fileDocumentManagerListener implementation="tara.intellij.codeinsight.languageinjection.TaraFileDocumentManagerListener"/>
        <errorHandler implementation="tara.intellij.diagnostic.errorreporting.PluginErrorReportSubmitter"/>
        <treeStructureProvider implementation="tara.intellij.project.view.TaraTreeStructureProvider"/>
        <fileTemplateGroup implementation="tara.intellij.actions.utils.TaraTemplatesFactory"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraToNative"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.FacetApplyMarker"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.NodeFragments"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraOverriddenNode"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraFacetOverriddenNode"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraOverriddenVariable"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraMethodSeparatorProvider"/>
        <codeInsight.lineMarkerProvider language="Tara"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.TaraNativeImplementationToJava"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="tara.intellij.codeinsight.linemarkers.JavaNativeImplementationToTara"/>
        <defaultLiveTemplatesProvider implementation="tara.intellij.codeinsight.livetemplates.TaraTemplateProvider"/>
        <liveTemplateContext implementation="tara.intellij.codeinsight.livetemplates.TaraTemplateContext"/>

        <gotoClassContributor implementation="tara.intellij.codeinsight.navigation.TaraGotoClassContributor"/>
        <gotoSymbolContributor implementation="tara.intellij.codeinsight.navigation.TaraGotoSymbolContributor"/>
        <gotoRelatedProvider implementation="tara.intellij.codeinsight.TaraRelatedFilesProvider"/>
        <problemFileHighlightFilter implementation="tara.intellij.codeinsight.TaraProblemFileHighlightFilter"/>
        <compileServer.plugin classpath="jps-plugin.jar"/>
        <fileEditorProvider implementation="tara.intellij.stash.StashEditorProvider"/>
        <projectService serviceInterface="tara.intellij.settings.TaraSettings" serviceImplementation="tara.intellij.settings.TaraSettings"/>
        <projectService serviceInterface="tara.intellij.lang.psi.TaraElementFactory"
                        serviceImplementation="tara.intellij.lang.psi.impl.TaraElementFactoryImpl"/>

        <facetType implementation="tara.intellij.project.facet.TaraFacetType"/>
        <framework.type implementation="tara.intellij.framework.TaraFrameworkType"/>
        <framework.detector implementation="tara.intellij.project.facet.TaraFacetType$TaraFrameworkDetector"/>
        <projectStructureDetector implementation="tara.intellij.project.module.TaraProjectStructureDetector"/>
        <lang.commenter language="Tara" implementationClass="tara.intellij.TaraCommenter"/>
        <languageInjector implementation="tara.intellij.codeinsight.languageinjection.TaraLanguageInjector"/>

        <!--<statementUpDownMover implementation="tara.intellij.codeinsight.moveupdown.TaraNodeMover" id="node" order="before line"/>-->

        <lang.documentationProvider language="Tara"
                                    implementationClass="tara.intellij.documentation.TaraDocumentationProvider"/>
        <fileTypeFactory implementation="tara.intellij.lang.file.TaraFileTypeFactory"/>

        <lang.parserDefinition language="Tara"
                               implementationClass="tara.intellij.lang.parser.TaraParserDefinition"/>
        <lang.syntaxHighlighterFactory language="Tara"
                                       implementationClass="tara.intellij.highlighting.TaraSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="tara.intellij.highlighting.TaraColorSettingPage"/>

        <lang.braceMatcher language="Tara" implementationClass="tara.intellij.codeinsight.TaraBraceMatcher"/>
        <quoteHandler fileType="Tara" className="tara.intellij.codeinsight.TaraQuoteHandler"/>

        <annotator language="Tara" implementationClass="tara.intellij.annotator.ReferenceAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.ResourceAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.NodeAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.DSLDeclarationAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.RuleAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.AnnotationsAnnotator"/>
        <annotator language="Tara" implementationClass="tara.intellij.annotator.RuleAnnotator"/>

        <completion.contributor language="Tara"
                                implementationClass="tara.intellij.codeinsight.completion.TaraNodeCompletionContributor"/>
        <completion.contributor language="Tara"
                                implementationClass="tara.intellij.codeinsight.completion.TaraVariableCompletionContributor"/>
        <completion.contributor language="Tara"
                                implementationClass="tara.intellij.codeinsight.completion.TaraAnnotationsCompletionContributor"/>
        <lang.psiStructureViewFactory language="Tara"
                                      implementationClass="tara.intellij.structureview.StructureViewFactory"/>
        <!--<psi.referenceContributor implementation="siani.tara.intellij.model.psi.resolve.TaraReferenceContributor"/>-->
        <nameSuggestionProvider implementation="tara.intellij.refactoring.TaraNameSuggestionProvider"/>
        <lang.elementManipulator forClass="tara.intellij.lang.psi.TaraIdentifier"
                                 implementationClass="tara.intellij.lang.psi.impl.IdentifierManipulator"/>
        <lang.elementManipulator forClass="tara.intellij.lang.psi.Expression"
                                 implementationClass="tara.intellij.lang.psi.TaraExpressionManipulator"/>
        <lang.elementManipulator forClass="tara.intellij.lang.psi.TaraHeaderReference"
                                 implementationClass="tara.intellij.lang.psi.impl.UseReferenceManipulator"/>
        <codeInsight.parameterInfo language="Tara"
                                   implementationClass="tara.intellij.codeinsight.parameterinfo.TaraParameterInfoHandler"/>
        <lang.refactoringSupport language="Tara"
                                 implementationClass="tara.intellij.refactoring.TaraRefactoringSupportProvider"/>
        <renameHandler implementation="tara.intellij.refactoring.rename.RenameHandler"/>
        <renamePsiElementProcessor implementation="tara.intellij.refactoring.rename.TaraRenamePsiElementProcessor"/>
        <lang.findUsagesProvider language="Tara"
                                 implementationClass="tara.intellij.lang.psi.resolve.TaraFindUsagesProvider"/>
        <lang.foldingBuilder language="Tara" implementationClass="tara.intellij.codefolding.TaraFoldingBuilder"/>
        <projectService serviceInterface="tara.intellij.codeinsight.JavaHelper" serviceImplementation="tara.intellij.codeinsight.JavaHelper$Impl"/>
        <!--<referenceImporter implementation="TaraReferenceImporter"/>-->
        <!--<lang.formatter language="Tara" implementationClass="tara.intellij.formatter.TaraFormattingModelBuilder"/>-->
        <lang.importOptimizer language="Tara" implementationClass="tara.intellij.codeinsight.imports.TaraImportOptimizer"/>
        <findUsagesHandlerFactory implementation="tara.intellij.findusage.TaraFindUsagesHandlerFactory" id="Tara" order="last, before default"/>
        <codeStyleSettingsProvider implementation="tara.intellij.formatter.TaraCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="tara.intellij.formatter.TaraLanguageCodeStyleSettingsProvider"/>
        <!--<webBrowserUrlProvider implementation="tara.intellij.browser.WebBrowserProvider"/>-->
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.chart.ChartFromTable</className>
            <category>Chart Viewer</category>
            <descriptionDirectoryName>ChartFromTable</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.FromBodyToExplicitParameters</className>
            <category>Move To parameters</category>
            <descriptionDirectoryName>FromBodyToExplicitParameters</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.InlineToIndentConverter</className>
            <category>Indent Operator</category>
            <descriptionDirectoryName>InlineToIndentConverter</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.MoveToNativePackage</className>
            <category>Native code move</category>
            <descriptionDirectoryName>MoveToNativePackage</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.IndentToInlineConverter</className>
            <category>Indent Operator</category>
            <descriptionDirectoryName>IndentToInlineConverter</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.ImplicitToExplicitParameters</className>
            <category>Parameter View Operator</category>
            <descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.ExplicitToImplicitParameters</className>
            <category>Parameter View Operator</category>
            <descriptionDirectoryName>ImplicitToExplicitParameters</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.ToBodyParameters</className>
            <category>Parameter View Operator</category>
            <descriptionDirectoryName>ToBodyParameters</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.InlineToMultiline</className>
            <category>String view operator</category>
            <descriptionDirectoryName>InlineToMultiline</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.MultilineToInline</className>
            <category>String view operator</category>
            <descriptionDirectoryName>MultilineToInline</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.ExtractToRoot</className>
            <category>Extract node to root and reference it</category>
            <descriptionDirectoryName>ExtractToRoot</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.EditElementDocumentation</className>
            <category>Set Documentation</category>
            <descriptionDirectoryName>EditElementDocumentation</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.CreateI18Value</className>
            <category>Create i18 value</category>
            <descriptionDirectoryName>CreateI18Value</descriptionDirectoryName>
        </intentionAction>
        <intentionAction>
            <className>tara.intellij.codeinsight.intentions.SyncNativeWithTara</className>
            <category>Sync Native With Tara</category>
            <descriptionDirectoryName>SyncNativeWithTara</descriptionDirectoryName>
        </intentionAction>
        <gotoClassContributor implementation="tara.intellij.codeinsight.navigation.TaraGotoClassContributor"/>
        <gotoSymbolContributor implementation="tara.intellij.codeinsight.navigation.TaraGotoSymbolContributor"/>
        <spellchecker.support language="Tara"
                              implementationClass="tara.intellij.codeinsight.spelling.TaraSpellcheckerStrategy"/>
        <spellchecker.bundledDictionaryProvider implementation="tara.intellij.codeinsight.spelling.TaraDictionaryProvider"/>
        <extendWordSelectionHandler implementation="tara.intellij.lang.psi.TaraSelectionHandler"/>
        <basicWordSelectionFilter implementation="tara.intellij.lang.psi.TaraBasicWordSelectionFilter"/>
        <moduleBuilder builderClass="tara.intellij.project.TaraModuleBuilder"/>
    </extensions>

    <actions>
        <action id="NewTaraFile" class="tara.intellij.actions.CreateTaraFileAction">
            <add-to-group group-id="NewGroup" anchor="first"/>
        </action>
        <action id="NewTaraTestFile" class="tara.intellij.actions.CreateTaraTestFileAction">
            <add-to-group group-id="NewGroup" anchor="first"/>
        </action>
        <action id="NewPackage" class="tara.intellij.actions.CreatePackageAction" text="Package" description="Create a new package" icon="AllIcons.Nodes.Package">
        </action>
        <group id="TaraMenu" text="Tara" description="Tara Menu">
            <add-to-group group-id="MainMenu" anchor="last"/>
            <action id="ExportLanguage" class="tara.intellij.actions.ExportLanguageAction" text="Export Language" description="Export Language">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt E"/>
            </action>

            <action id="UpdateLanguage" class="tara.intellij.actions.UpdateLanguageAction" text="Update Language" description="Update Language">
                <keyboard-shortcut keymap="$default" first-keystroke="control alt U"/>
            </action>
        </group>

        <action id="tara.intellij.actions.SubmitFeedbackAction"
                class="tara.intellij.actions.SubmitFeedbackAction"
                text="Submit Tara Feedback" description="You can report a bug or suggestion of plugin">
            <add-to-group group-id="HelpMenu" anchor="before" relative-to-action="TechnicalSupport"/>
        </action>
    </actions>

    <module-components>
        <component>
            <implementation-class>tara.intellij.project.TaraModuleListener</implementation-class>
        </component>
    </module-components>

    <project-components>
        <component>
            <implementation-class>tara.intellij.project.TaraCompilerListener</implementation-class>
        </component>
        <component>
            <implementation-class>tara.intellij.codeinsight.languageinjection.imports.ImportsSaverService</implementation-class>
        </component>
        <component>
            <implementation-class>tara.intellij.settings.TaraSettingsComponent</implementation-class>
        </component>
    </project-components>

    <application-components>
    </application-components>
</idea-plugin>