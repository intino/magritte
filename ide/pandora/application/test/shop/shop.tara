dsl Teseo

//Application  shop
//	path = "/v1"
//	consumes = "application/json"
//	produces = "application/json"
//	Authentication
//		todo = "Mario"
//	Api files
//		title = "Product Catalog API"
//		path = "/files"
//		protocols = https
//		Resource
//			title = ""
//			path = "/"
//			method = Get
//			Parameter("id", in = query) as Text
//			Response(SuccessOk) as File
//			Response(ErrorNotFound)
//			Response(ErrorUnauthorized)
//		Resource
//			title = ""
//			path = "/"
//			method = Post
//			Response(SuccessOk) as Text
//				description = "Temporal id"
//			Parameter("content", in = body) as Text
//			Parameter("content", in = body) as Text
//	Api help
//		title = "This help"
//		path = "/help"
//		protocols = https
//		Resource
//			title = ""
//			path = "/"
//			method = Get
//			Response(SuccessOk) as Html
//	Api support
//		title = "This help"
//		path = "/help"
//		protocols = https
//		Resource
//			title = ""
//			path = "/"
//			method = Get
//			Parameter("lang", in = body, required = true) as Text
//				description = "language support"
//			Response(SuccessOk) as Html
//	Api productCatalog
//		title = "Product Catalog API"
//		path = "/product-catalog"
//		protocols = https
//		Schema productList
//			Element productList
//				Attribute(multiple = true) names as Text
//		Schema product
//			Element stock
//				Member(required = true) product
//					Attribute name as Text
//					Attribute price as Real
//					Attribute(required = false) brand as Text("unknown brand")
//					Member record
//						Attribute key as Text
//						Attribute value as Text
//					Member(required = true, multiple = false) identification
//						Attribute barcode as Integer
//						Attribute(required = false) barcode2d as Text
//		Resource
//			title = "Catalog Product list"
//			path = "/"
//			method = Get
//			Parameter("search-text", in = query) as Text
//			Response(SuccessOk) as Object(schema = productList)
//			Response(ErrorUnauthorized)
//		Resource
//			title = "Get product by id"
//			path = "/:id"
//			method = Get
//			Response(SuccessOk) as Object(schema = product)
//			Response(ErrorNotFound)
//			Response(ErrorUnauthorized)
//		Resource
//			title = "Create product"
//			path = "/"
//			method = Post
//			description = "A new process for creating a product is started"
//			Response(SuccessOk) as Text
//				description = "Process id"
//			Response(ErrorUnauthorized)
//		Resource
//			title = "Update product"
//			path = "/:id"
//			method = Put
//			description = "A new process for updating a product is started"
//			Response(SuccessOk) as Text
//				description = "Process id"
//			Response(ErrorUnauthorized)
//		Resource
//			title = "Delete product"
//			path = "/:id"
//			method = Put
//			description = "A new process for removing a product is started"
//			Response(SuccessOk) as Text
//				description = "Process id"
//			Response(ErrorUnauthorized)
//	Api processes
//		title = "Sale Process API"
//		path = "/processes"
//		Resource
//			title = "List of process types"
//			method = Get
//			path = "/"
//			Parameter(name="process", in=query) as Text
//				description = "Process type"
//			Response(SuccessOk) as Object(processTypeList)
//			Response(ErrorUnauthorized)
//		Schema processTypeList
//			Element processList
//				Attribute(multiple = true) names as Text
//		Resource
//			title = "Create new process"
//			method = Post
//			path = "/"
//			Parameter(name="process", in=query, required = true) as Text
//				description = "Process type"
//			Response(SuccessOk) as Text
//				description = "Process id"
//			Response(ErrorUnauthorized)
//		Resource
//			title = "Update process"
//			path = "/"
//			method = Put
//			Parameter(name="process", in=query, required = true) as Text
//				description = "Process id"
//			Parameter(name="state", in=query, required = true) as Text
//				description = "State"
//			Response(SuccessOk)
//			Response(ErrorNotFound)
//			Response(ErrorBadRequest)
//			Response(ErrorUnauthorized)
