def type(Variable & multiple & owner) !type(reactive | inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", this.$name+FirstLowerCase+javaValidName);
end

def type(Variable & multiple & owner) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", this.$name+FirstLowerCase+javaValidName != null ? new java.util.ArrayList(java.util.Collections.singletonList(this.$name+FirstLowerCase+javaValidName)) : java.util.Collections.emptyList());
end

def type(Variable & reference & owner) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", this.$name+FirstLowerCase+javaValidName != null ? new java.util.ArrayList(java.util.Collections.singletonList(this.$name+FirstLowerCase+javaValidName)) : java.util.Collections.emptyList());
end

def type(Variable & function & owner) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", this.$name+FirstLowerCase+javaValidName != null ? new java.util.ArrayList(java.util.Collections.singletonList(this.$name+FirstLowerCase+javaValidName)) : java.util.Collections.emptyList());
end

def type(Variable & owner) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", new java.util.ArrayList(java.util.Collections.singletonList(this.$name+FirstLowerCase+javaValidName)));
end

def type(Variable & metaType & multiple) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", _$containerName+FirstLowerCase.$name+FirstLowerCase+javaValidName());
end

def type(Variable & metaType) type(function | reactive) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", new java.util.ArrayList(java.util.Collections.singletonList(io.intino.magritte.framework.utils.NativeExtractor.extract("$name", _$containerName+FirstLowerCase))));
end

def type(Variable & metaType) !type(inherited | overriden | volatile) trigger(list)
	map.put("$name+FirstLowerCase", new java.util.ArrayList(java.util.Collections.singletonList(this._$containerName+FirstLowerCase.$name+FirstLowerCase+javaValidName())));
end

def type(Node & single & owner) !type(inherited | overriden | instance) trigger(list)
	if ($name+FirstLowerCase+javaValidName != null) nodes.add(this.$name+FirstLowerCase+javaValidName.core$$());
end

def type(Node & owner) !type(inherited | overriden | instance) trigger(list)
	$name+toCamelCase+FirstLowerCase~List.stream().forEach(c -> nodes.add(c.core$$()));
end

def type(Node & single & owner) !type(inherited | overriden | instance) trigger(componentList)
	if ($name+FirstLowerCase+javaValidName != null) components.add(this.$name+FirstLowerCase+javaValidName.core$$());
end

def type(Node & owner) !type(inherited | overriden | instance) trigger(componentList)
	new java.util.ArrayList<>($name+toCamelCase+toCamelCase+FirstLowerCase~List).forEach(c -> components.add(c.core$$()));
end

def type(Node) trigger(list)
end

def type(Node) trigger(componentlist)
end