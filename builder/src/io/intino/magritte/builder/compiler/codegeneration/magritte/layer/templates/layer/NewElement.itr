def type(variable & Word & multiple & required) !type(outDefined) !attribute(values) !attribute(wordvalues) trigger(parameters)
	java.util.List<$qn.$type+FirstUpperCase> $name+javaValidWord
end

def type(variable & Word & multiple & OutDefined & required) !attribute(values) !attribute(wordvalues) trigger(parameters)
	java.util.List<$workingPackage+LowerCase.rules.$rule+externalWordClass> $name+FirstLowerCase
end

def type(variable & Word & outDefined & required) !attribute(values) !attribute(wordvalues) trigger(parameters)
	$workingPackage+LowerCase.rules.$rule+externalWordClass $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & Word & required) !type(outDefined) !attribute(values) !attribute(wordvalues) trigger(parameters)
	$qn+reference.$type+FirstUpperCase $name+javaValidWord
end

def type(variable & reactive & multiple & required) !type(empty) !attribute(values) !attribute(wordvalues) trigger(parameters)
	io.intino.magritte.framework.Expression<java.util.List<$type+fullType+reference>> $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & reactive & required) !type(multiple | empty) !attribute(values) !attribute(wordvalues) trigger(parameters)
	io.intino.magritte.framework.Expression<$type+fullType+reference> $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & function & required) !type(empty) !attribute(values) !attribute(wordvalues) trigger(parameters)
	$workingPackage+LowerCase.functions.$rule+interfaceClass $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & multiple & required) !type(concept | empty) !attribute(values) !attribute(wordvalues) trigger(parameters)
	java.util.List<$type+fullType+reference> $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & resource & required) !type(concept | empty | multiple) trigger(parameters)
	$type+reference+variableType $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & required) !type(concept | empty | multiple) !attribute(values) !attribute(wordvalues) trigger(parameters)
	$type+reference+variableType $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & concept & multiple & required) !type(empty) !attribute(values) trigger(parameters)
	java.util.List<io.intino.magritte.framework.Concept> $name+javaValidName+FirstLowerCase+javaValidWord
end

def type(variable & concept & required) !type(multiple | empty) !attribute(values) trigger(parameters)
	io.intino.magritte.framework.Concept $name+javaValidName+FirstLowerCase+javaValidWord
end

def	type(variable & reactive & required) !type(empty) !attribute(values) !attribute(wordvalues) trigger(assign)
	newElement.core$$().set(newElement, "$name+FirstLowerCase", java.util.Collections.singletonList($name+javaValidName+FirstLowerCase+javaValidWord));
end

def	type(variable & multiple & required) !type(empty) !attribute(values) !attribute(wordvalues) trigger(assign)
	newElement.core$$().set(newElement, "$name+FirstLowerCase", $name+javaValidName+FirstLowerCase+javaValidWord);
end

def	type(variable & required) !type(multiple | empty) !attribute(values) !attribute(wordvalues) trigger(assign)
	newElement.core$$().set(newElement, "$name+FirstLowerCase", java.util.Collections.singletonList($name+javaValidName+FirstLowerCase+javaValidWord));
end

def	type(variable & required) !type(empty) !attribute(values) !attribute(wordvalues) trigger(name)
	$name+javaValidWord
end