{
  parserClass='monet.tara.metamodel.TaraParser'
  stubParserClass='monet.tara.metamodel.parser.GeneratedParserUtilBase'

  extends='com.intellij.extapi.psi.ASTWrapperPsiElement'

  psiClassPrefix='Tara'
  psiImplClassSuffix='Impl'
  psiPackage='monet.tara.metamodel.psi'
  psiImplPackage='monet.tara.metamodel.psi.impl'

  elementTypeHolderClass='monet.tara.metamodel.psi.TaraTypes'
  elementTypeClass='monet.tara.metamodel.psi.TaraElementType'
  tokenTypeClass='monet.tara.metamodel.psi.TaraTokenType'

  psiImplUtilClass='monet.tara.metamodel.psi.impl.TaraPsiImplUtil'
}

root ::=(COMMENT|conceptDefinition)+

conceptDefinition ::= conceptSignature conceptBody? END_CONCEPT {mixin='monet.tara.metamodel.psi.impl.TaraNamedElementImpl' implements='monet.tara.metamodel.psi.TaraNamedElement' methods=[getIdentifier getName setName getNameIdentifier]}

conceptSignature ::= CONCEPT MODIFIERS? IDENTIFIER (IS IDENTIFIER)? annotation*

conceptBody::= INDENT statement+ DEDENT

statement::= propertiesBody | childrenBody | referencesBody

propertiesBody::=primitive_type IDENTIFIER (ASSIGN primitive)?

childrenBody::=HAS IDENTIFIER annotation* conceptBody*

referencesBody::=REF IDENTIFIER {methods=[getIdentifier]}

primitive_type ::=  ID_TYPE|INT_TYPE|STRING_TYPE|DOUBLE_TYPE

primitive ::=  INT|DOUBLE|STRING

annotation ::= NAMEABLE|AT_ROOT|EXTENSIBLE|ACTION

