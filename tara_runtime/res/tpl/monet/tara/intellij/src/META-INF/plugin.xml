<idea-plugin version="1">
  <id>siani.dev.::projectName::</id>
  <name>::projectProperName:: Plugin</name>
  <version>1.0</version>
  <vendor email="octavioroncal@siani.es" url="http://www.monet.org">Siani</vendor>

  <description><![CDATA[
      Enter short description for your plugin here.<br>
      <small>most HTML tags may be used</small>
      ]]></description>

  <change-notes><![CDATA[
      Add change notes here.<br>
      <small>most HTML tags may be used</small>
      ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="133.331"/>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <!-- uncomment to enable plugin in all products
  <depends>com.intellij.modules.lang</depends>
  -->

  <actions>
    <!--<group id="::projectName::.file.group" popup="false">-->
    <!--<action id="::projectName::.Generate" class="monet.::projectName::.compilerntellij.actions.GenerateAction" text="Generate Plugin">-->
    <!--<keyboard-shortcut keymap="$default" first-keystroke="control shift G"/>-->
    <!--</action>-->
    <!--<add-to-group group-id="ToolsMenu" anchor="before" relative-to-action="com.intellij.tools.ExternalToolsGroup"/>-->
    <!--<add-to-group group-id="EditorPopupMenu" anchor="last"/>-->
    <!--<add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>-->
    <!--</group>-->
    <action id="BashErrorReporter.TriggerException"
            class="monet.::projectName::.intellij.actions.TriggerExceptionAction"
            text="Trigger Exception"
            description="Triggers an exception">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>
    <action id="NewDefinition" class="monet.::projectName::.intellij.actions.Create::projectProperName::FileAction">
      <add-to-group group-id="NewGroup" anchor="before" relative-to-action="NewFile"/>
    </action>
    <action id="New::projectProperName::Package" class="monet.::projectName::.intellij.actions.Create::projectProperName::PackageAction" text="Package"
            description="Create a new package" icon="com.intellij.icons.AllIcons.Nodes.Package">
      <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDefinition"/>
    </action>
  </actions>

  <application-components>
  </application-components>

  <extensions defaultExtensionNs="com.intellij">
    <errorHandler implementation="monet.::projectName::.intellij.diagnostic.error_reporting.PluginErrorReportSubmitter"/>
    <lang.namesValidator language="::projectProperName::"
                         implementationClass="monet.::projectName::.intellij.refactoring.rename.::projectProperName::NamesValidator"/>
    <projectService serviceInterface="monet.::projectName::.intellij.metamodel.psi.::projectProperName::ElementFactory"
                    serviceImplementation="monet.::projectName::.intellij.metamodel.psi.impl.::projectProperName::ElementFactoryImpl"/>

    <moduleType id="TARA_MODULE" implementationClass="monet.::projectName::.intellij.project.module.::projectProperName::ModuleType"/>
    <projectConfigurable instance="monet.::projectName::.intellij.compiler.::projectProperName::CompilerConfigurable" id="::projectProperName:: compiler"
                         displayName="::projectProperName:: Compiler" parentId="project.propCompiler"/>
    <compileServer.plugin classpath="::projectName::-jps-plugin.jar"/>
    <projectService serviceInterface="monet.::projectName::.intellij.compiler.::projectProperName::CompilerWorkspaceConfiguration"
                    serviceImplementation="monet.::projectName::.intellij.compiler.::projectProperName::CompilerWorkspaceConfiguration"/>
    <projectService serviceInterface="monet.::projectName::.intellij.compiler.::projectProperName::CompilerConfiguration"
                    serviceImplementation="monet.::projectName::.intellij.compiler.::projectProperName::CompilerConfiguration"/>
    <configurationType implementation="monet.::projectName::.intellij.project.runner.::projectProperName::RunConfigurationType"/>
    <lang.commenter language="::projectProperName::" implementationClass="monet.::projectName::.intellij.::projectProperName::Commenter"/>
    <lang.documentationProvider language="::projectProperName::"
                                implementationClass="monet.::projectName::.intellij.documentation.::projectProperName::DocumentationProvider"/>
    <fileTypeFactory implementation="monet.::projectName::.intellij.metamodel.file.::projectProperName::FileTypeFactory"/>
    <lang.parserDefinition language="::projectProperName::"
                           implementationClass="monet.::projectName::.intellij.metamodel.parser.::projectProperName::ParserDefinition"/>
    <lang.syntaxHighlighterFactory key="::projectProperName::"
                                   implementationClass="monet.::projectName::.intellij.highlighting.::projectProperName::SyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="monet.::projectName::.intellij.highlighting.::projectProperName::ColorSettingPage"/>
    <lang.braceMatcher language="::projectProperName::" implementationClass="monet.::projectName::.intellij.highlighting.::projectProperName::BraceMatcher"/>
    <annotator language="::projectProperName::" implementationClass="monet.::projectName::.intellij.::projectProperName::Annotator"/>
    <globalInspection language="::projectProperName::" shortName="UnusedDefinition" bundle="messages.::projectProperName::Bundle"
                      key="unused.definition.inspection.display.name"
                      groupKey="::projectName::.files.inspection.group.display.name" enabledByDefault="true" level="WARNING"
                      implementationClass="monet.::projectName::.intellij.codeinspection.UnusedAbstractDefinitionInspection"/>
    <!--<globalInspection shortName="UnusedAbstractDefinitionInspection" bundle="messages.::projectProperName::Bundle"-->
    <!--key="duplicate.definition.display.name"-->
    <!--groupKey="group.names.::projectName::.files" enabledByDefault="false" level="WARNING"-->
    <!--implementationClass="DuplicateDefinitionInspection"/>-->
    <completion.contributor language="::projectProperName::"
                            implementationClass="monet.::projectName::.intellij.codeInsight.completion.::projectProperName::SignatureCompletionContributor"/>
    <completion.contributor language="::projectProperName::"
                            implementationClass="monet.::projectName::.intellij.codeInsight.completion.::projectProperName::PrimitivesCompletionContributor"/>
    <completion.contributor language="::projectProperName::"
                            implementationClass="monet.::projectName::.intellij.codeInsight.completion.::projectProperName::AnnotationsCompletionContributor"/>
    <lang.psiStructureViewFactory language="::projectProperName::"
                                  implementationClass="monet.::projectName::.intellij.structureview.::projectProperName::StructureViewFactory"/>
    <psi.referenceContributor language="::projectProperName::" implementation="monet.::projectName::.intellij.::projectProperName::ReferenceContributor"/>
    <nameSuggestionProvider implementation="monet.::projectName::.intellij.refactoring.::projectProperName::NameSuggestionProvider"/>
    <lang.elementManipulator forClass="monet.::projectName::.intellij.metamodel.psi.::projectProperName::Identifier"
                             implementationClass="monet.::projectName::.intellij.metamodel.psi.impl.::projectProperName::DefinitionIdentifierManipulator"/>
    <lang.refactoringSupport language="::projectProperName::"
                             implementationClass="monet.::projectName::.intellij.::projectProperName::RefactoringSupportProvider"/>
    <renameHandler implementation="monet.::projectName::.intellij.refactoring.::projectProperName::RenameHandler"/>
    <lang.findUsagesProvider language="::projectProperName::"
                             implementationClass="monet.::projectName::.intellij.::projectProperName::FindUsagesProvider"/>
    <lang.foldingBuilder language="::projectProperName::" implementationClass="monet.::projectName::.intellij.::projectProperName::FoldingBuilder"/>
    <!--<lang.formatter language="::projectProperName::" implementationClass="monet.::projectName::.intellij.::projectProperName::FormattingModelBuilder"/>-->
  </extensions>
</idea-plugin>