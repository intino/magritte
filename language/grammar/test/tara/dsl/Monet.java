package tara.dsl;

import tara.language.model.Tag;

import java.util.Locale;

import static tara.language.semantics.constraints.RuleFactory.*;

public class Monet extends Tara {
	public Monet() {
		in("").def(context("").allow(multiple("ServiceRole", Tag.FACET_INSTANCE), multiple("FeederRole", Tag.FACET_INSTANCE), multiple("UserRole", Tag.FACET_INSTANCE), multiple("ServiceRole", Tag.FACET_INSTANCE), multiple("FeederRole", Tag.FACET_INSTANCE), multiple("UserRole", Tag.FACET_INSTANCE), multiple("Multiple", Tag.FACET_INSTANCE), multiple("Target", Tag.FACET_INSTANCE), multiple("Prototypable", Tag.FACET_INSTANCE), multiple("Georeferenced", Tag.FACET_INSTANCE), multiple("Extensible", Tag.FACET_INSTANCE), multiple("Environment", Tag.FACET_INSTANCE), multiple("Exportable", Tag.FACET_INSTANCE), multiple("Importable", Tag.FACET_INSTANCE), multiple("RestrictedByOwner", Tag.FACET_INSTANCE), multiple("RestrictedByRoles", Tag.FACET_INSTANCE), multiple("RestrictedByOwner", Tag.FACET_INSTANCE), multiple("RestrictedByRoles", Tag.FACET_INSTANCE), multiple("Collectable", Tag.FACET_INSTANCE), multiple("Currency", Tag.FACET_INSTANCE), multiple("Percent", Tag.FACET_INSTANCE), multiple("Currency", Tag.FACET_INSTANCE), multiple("Percent", Tag.FACET_INSTANCE), multiple("Url", Tag.FACET_INSTANCE), multiple("Password", Tag.FACET_INSTANCE), multiple("Email", Tag.FACET_INSTANCE), multiple("RegularExpression", Tag.FACET_INSTANCE), multiple("Url", Tag.FACET_INSTANCE), multiple("Password", Tag.FACET_INSTANCE), multiple("Email", Tag.FACET_INSTANCE), multiple("RegularExpression", Tag.FACET_INSTANCE), multiple("ReadOnly", Tag.FACET_INSTANCE), multiple("Process", Tag.FACET_INSTANCE), multiple("Service", Tag.FACET_INSTANCE), multiple("Job", Tag.FACET_INSTANCE), multiple("Process", Tag.FACET_INSTANCE), multiple("Service", Tag.FACET_INSTANCE), multiple("Job", Tag.FACET_INSTANCE), multiple("State", Tag.FACET_INSTANCE), multiple("Sequence", Tag.MAIN, Tag.TERMINAL_INSTANCE), multiple("Role"), multiple("User", Tag.MAIN, Tag.TERMINAL_INSTANCE), multiple("Thesaurus", Tag.MAIN, Tag.TERMINAL_INSTANCE), multiple("Node", Tag.MAIN), multiple("Dialog", Tag.MAIN), multiple("Document", Tag.MAIN), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), multiple("Node", Tag.MAIN), multiple("Dialog", Tag.MAIN), multiple("Document", Tag.MAIN), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), name()).doc("monetv4.Monet", 0, ""));
		in("ServiceRole").def(context("Concept").allow(name()).require(_parameter("ontologies", "string", true, 0, "", "REQUIRED"), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 8, ""));
		in("FeederRole").def(context("Concept").allow(name()).require(_parameter("ontologies", "string", true, 0, "", "REQUIRED"), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 11, ""));
		in("UserRole").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 14, ""));
		in("Multiple").def(context("Concept").allow(multiple("Multiple.Boundary"), name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 17, ""));
		in("Multiple.Boundary").def(context("Concept").allow(name()).require(_parameter("min", "natural", false, 0, "", "REQUIRED"), _parameter("max", "natural", false, 1, "", "REQUIRED"), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 19, "Se utiliza para definir el rango de elementos que se permite añadir"));
		in("Target").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 29, "Permite que el nodo pueda ser vinculado desde un campo vínculo"));
		in("Prototypable").def(context("Concept").allow(name()).require(_parameter("entities", new String[]{"Node", "Dialog", "Document", "Field"}, true, 0, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 34, "Convierte el nodo en un objeto patrón del cual se puedan crear nuevas instancias"));
		in("Georeferenced").def(context("Concept").allow(name()).require(_parameter("wktPlace", "string", false, 0, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 39, "Confiere información de geolocalización a un nodo"));
		in("Extensible").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 44, "Esta propiedad se utiliza cuando se desea que el formulario sea extensible.\n Un formulario extensible tiene una vista resumida y otra extendida.\n Aquellos campos que se declaren dentro del formulario con la propiedad \"extended\" solo se mostrarán en la versión extendida"));
		in("Environment").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 49, "Esta propiedad se utiliza para configurar el nodo como entorno del usuario"));
		in("Exportable").def(context("Concept").allow(name()).require(_parameter("onExport", "native", false, 0, "Event#public void execute()"), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 53, ""));
		in("Importable").def(context("Concept").allow(name()).require(_parameter("onImport", "native", false, 0, "Event#public void execute()"), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 57, ""));
		in("RestrictedByOwner").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 63, "Visible únicamente para el usuario que creó la entidad"));
		in("RestrictedByRoles").def(context("Concept").allow(name()).require(_parameter("roles", new String[]{"Role"}, true, 0, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 67, "Se usa para limitar el acceso de los usuarios a las entidades, barras de herramienta y paneles de firma. Solo unos unos roles concretos podrán acceder"));
		in("Collectable").def(context("Concept").allow(single("Collectable.Index", Tag.FEATURE_INSTANCE, Tag.SINGLE), single("Collectable.Thesaurus", Tag.FEATURE_INSTANCE, Tag.SINGLE), name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 75, ""));
		in("Collectable.Index").def(context("Concept").allow(multiple("Collectable.Index.View"), name()).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 77, "Permite configurar el modo en que se verá este nodo en los listados"));
		in("Collectable.Index.View").def(context("Concept").allow(multiple("Collectable.Index.View.Picture"), multiple("Collectable.Index.View.Title"), multiple("Collectable.Index.View.Line"), multiple("Collectable.Index.View.LineBelow"), multiple("Collectable.Index.View.Highlight"), multiple("Collectable.Index.View.Footer"), parameter("forNodes", new String[]{"Node"}, true, 0, ""), name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 79, ""));
		in("Collectable.Index.View.Picture").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 81, ""));
		in("Collectable.Index.View.Title").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 82, ""));
		in("Collectable.Index.View.Line").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 83, ""));
		in("Collectable.Index.View.LineBelow").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 84, ""));
		in("Collectable.Index.View.Highlight").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 85, ""));
		in("Collectable.Index.View.Footer").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 86, ""));
		in("Collectable.Thesaurus").def(context("Concept").allow(multiple("Collectable.Thesaurus.View"), name()).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 88, ""));
		in("Collectable.Thesaurus.View").def(context("Concept").allow(multiple("Collectable.Thesaurus.View.Key"), multiple("Collectable.Thesaurus.View.Label"), multiple("Collectable.Thesaurus.View.Parent"), multiple("Collectable.Thesaurus.View.Tags"), parameter("forNodes", new String[]{"Node"}, true, 0, ""), name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 89, ""));
		in("Collectable.Thesaurus.View.Key").def(context("Concept").allow(name()).require(_parameter("field", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, false, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 91, ""));
		in("Collectable.Thesaurus.View.Label").def(context("Concept").allow(name()).require(_parameter("field", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, false, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 92, ""));
		in("Collectable.Thesaurus.View.Parent").def(context("Concept").allow(name()).require(_parameter("field", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, false, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 93, ""));
		in("Collectable.Thesaurus.View.Tags").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 94, ""));
		in("Currency").def(context("Concept").allow(name()).require(_parameter("symbol", "string", false, 0, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 100, "The number represents a currency amount"));
		in("Percent").def(context("Concept").allow(multiple("Percent.Range"), name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 106, "Number displayed with a percent symbol and range limited from 0 to 100"));
		in("Percent.Range").def(context("Concept").allow(parameter("min", "natural", false, 0, ""), parameter("max", "natural", false, 1, ""), name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 109, ""));
		in("Url").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 116, ""));
		in("Password").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 119, ""));
		in("Email").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 122, ""));
		in("RegularExpression").def(context("Concept").allow(multiple("RegularExpression.Meta"), name()).require(_parameter("regexp", "string", false, 0, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 125, ""));
		in("RegularExpression.Meta").def(context("Concept").allow(name()).require(_parameter("position", "natural", false, 0, ""), _parameter("indicator", "string", false, 1, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/EntitiesFacets.tara", 128, ""));
		in("Rule.ListenTo").def(context("Concept").allow(multiple("Rule.ListenTo.Parent", Tag.TERMINAL_INSTANCE), multiple("Rule.ListenTo.Siblings", Tag.TERMINAL_INSTANCE), multiple("Rule.ListenTo.Links", Tag.TERMINAL_INSTANCE), multiple("Rule.ListenTo.Children", Tag.TERMINAL_INSTANCE), name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 10, ""));
		in("Rule.ListenTo.Parent").def(context("Concept").allow(name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 11, "Cuando cambia el padre del objeto"));
		in("Rule.ListenTo.Siblings").def(context("Concept").allow(name()).require(_parameter("siblings", new String[]{"Node"}, true, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 13, "Cuando cambia el hermano del objeto"));
		in("Rule.ListenTo.Links").def(context("Concept").allow(name()).require(_parameter("links", new String[]{"Link"}, true, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 16, "Cuando cambia el nodo enlazado en el campo link indicado"));
		in("Rule.ListenTo.Children").def(context("Concept").allow(name()).require(_parameter("children", new String[]{"Node"}, true, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 19, "Cuando cambia el hermano de este nodo."));
		in("NodeRule").def(context("Concept").allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE), name()).require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED", "TERMINAL"), _parameter("flags:word", new String[]{"ReadOnly", "Invalid"}, false, 1, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 23, "Se aplica a nodos"));
		in("ViewRule").def(context("Concept").allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE), name()).require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED", "TERMINAL"), _parameter("to", new String[]{"Node.View"}, true, 1, "", "REQUIRED", "TERMINAL"), _parameter("flags:word", new String[]{"Hidden"}, false, 2, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 29, "Se aplica a vistas"));
		in("OperationRule").def(context("Concept").allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE), name()).require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED", "TERMINAL"), _parameter("to", new String[]{"Entity.Toolbar.Operation"}, true, 1, "", "REQUIRED", "TERMINAL"), _parameter("flags:word", new String[]{"Hidden", "Disabled"}, false, 2, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 36, "Se aplica a operaciones"));
		in("FieldRule").def(context("Concept").allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE), name()).require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED", "TERMINAL"), _parameter("to", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 1, "", "REQUIRED", "TERMINAL"), _parameter("flags:word", new String[]{"Required", "ReadOnly", "Invalid", "Hidden"}, false, 2, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 43, "Se aplica a campos"));
		in("HyperLinkRule").def(context("Concept").allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE), name()).require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED", "TERMINAL"), _parameter("to", new String[]{"HyperLink"}, true, 1, "", "REQUIRED", "TERMINAL"), _parameter("flags:word", new String[]{"Hidden"}, false, 2, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Rules.tara", 50, "Se aplica a vínculos"));
		in("FieldView.Display").def(context("Concept").allow(parameter("mode:word", new String[]{"Reduced", "Extended"}, false, 0, "", "TERMINAL"), parameter("layoutExtended", "file", false, 3, "", "TERMINAL"), name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 1, "", "TERMINAL"), _parameter("layout", "file", false, 2, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 9, ""));
		in("FieldView.Disable").def(context("Concept").allow(name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 15, ""));
		in("Form").def(context("Concept").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE), name(), facet("Default")).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 18, ""));
		in("Table").def(context("Concept").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE), name(), facet("Default")).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 23, ""));
		in("Poll").def(context("Concept").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE), name(), facet("Default")).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 26, ""));
		in("Set.Sort").def(context("Concept").allow(parameter("mode:word", new String[]{"Ascendant", "Descendant"}, false, 1, "", "TERMINAL"), name()).require(_parameter("fields", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 39, "Se utiliza para permitir que el usuario pueda indicar cómo se ordenan los nodos"));
		in("Catalog").def(context("Concept").allow(multiple("Set.Sort", Tag.TERMINAL_INSTANCE), parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, "", "TERMINAL"), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)", "TERMINAL"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)", "TERMINAL"), name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 44, "En un catálogo los nodos NO comparten un padre en común"));
		in("Collection").def(context("Concept").allow(multiple("Set.Sort", Tag.TERMINAL_INSTANCE), parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, "", "TERMINAL"), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)", "TERMINAL"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)", "TERMINAL"), name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 49, "En una colección los nodos comparten un padre en común\n     En este caso se permite operaciones de modificación en la lista: añadir, eliminar nodos del tipo definido en la variable type"));
		in("HeatMap").def(context("Concept").allow(multiple("Set.Sort", Tag.TERMINAL_INSTANCE), parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, "", "TERMINAL"), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)", "TERMINAL"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)", "TERMINAL"), name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED", "TERMINAL"), _parameter("wktCenter", "string", false, 4, "", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 59, "Muestra la lista de nodos en un mapa de calor"));
		in("PointsMap").def(context("Concept").allow(multiple("Set.Sort", Tag.TERMINAL_INSTANCE), parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, "", "TERMINAL"), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)", "TERMINAL"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)", "TERMINAL"), name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED", "TERMINAL"), _parameter("wktCenter", "string", false, 4, "", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 63, "Muestra la lista de nodos en un mapa de puntos\n         En este caso, los puntos son seleccionables. Cuando se selecciona un punto, el campo adquiere el valor del nodo seleccionado"));
		in("PrototypeList").def(context("Concept").allow(multiple("Set.Sort", Tag.TERMINAL_INSTANCE), parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, "", "TERMINAL"), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)", "TERMINAL"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)", "TERMINAL"), name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED", "TERMINAL"), _parameter("nature:word", new String[]{"Shared", "Owned"}, false, 4, "", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 69, "Esta propiedad se utiliza si se desean mostrar los prototipos compartidos por otros nodos del mismo tipo o los prototipos propios"));
		in("HyperLink").def(context("Concept").allow(name()).require(_parameter("entity", new String[]{"Node", "Dialog", "Document", "Field"}, true, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 75, "Muestra un enlace de este nodo a todos las entidades con las que se vincule"));
		in("Folder").def(context("Concept").allow(name()).require(_parameter("documents", new String[]{"Document"}, true, 0, "", "REQUIRED", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 82, "Mostrará un listado de los documentos que contiene el nodo a modo de carpeta de adjuntos"));
		in("FollowerList").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 88, "Mostrará un listado de las entidades que tienen una relación el nodo"));
		in("RevisionList").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 93, "Permite mostrar las versiones anteriores del nodo"));
		in("History").def(context("Concept").allow(name()).require(_parameter("datastore", "string", false, 0, "", "TERMINAL"), _plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 98, "Se utiliza cuando se desea recordar el histórico de los valores introducidos por el usuario\nNombre del almacen en el que se registrará el histórico. Se permite que dos campos que se encuentren en formularios diferentes pueden compartir el mismo datastore"));
		in("ReadOnly").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 105, ""));
		in("Default").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Views.tara", 108, ""));
		in("Task.Auditory").def(context("Concept").allow(name()).require(_parameter("createDate", "date", false, 0, "", "TERMINAL"), _parameter("startDate", "date", false, 1, "", "TERMINAL"), _parameter("endDate", "date", false, 2, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 12, ""));
		in("Task.Suggestion").def(context("Concept").allow(name()).require(_parameter("startDate", "date", false, 0, "", "TERMINAL"), _parameter("endDate", "date", false, 1, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 17, ""));
		in("Process").def(context("Concept").allow(multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE), multiple("Process.WorkMap", Tag.FEATURE_INSTANCE, Tag.REQUIRED), single("Process.State", Tag.TERMINAL_INSTANCE, Tag.SINGLE, Tag.REQUIRED), single("Process.History", Tag.TERMINAL_INSTANCE, Tag.SINGLE, Tag.REQUIRED), parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), name(), facet("State").allow(multiple("Form", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("Table", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("Poll", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("State.Workmap", Tag.PROTOTYPE))).require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 21, ""));
		in("Process.State").def(context("Concept").allow(parameter("place", new String[]{"Place"}, false, 0, "", "TERMINAL"), parameter("mission", new String[]{"Mission"}, false, 1, "", "TERMINAL"), name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 22, ""));
		in("Process.History").def(context("Concept").allow(multiple("Process.History.Step", Tag.TERMINAL_INSTANCE), name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 26, ""));
		in("Process.History.Step").def(context("Concept").allow(name()).require(_parameter("executed", "date", false, 0, "", "TERMINAL"), _parameter("description", "string", false, 1, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 27, ""));
		in("Process.WorkMap").def(context("Concept").allow(multiple("Place", Tag.TERMINAL_INSTANCE), multiple("Initial", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Terminal", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE, Tag.REQUIRED), name()).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 31, ""));
		in("Service").def(context("Concept").allow(multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE), parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), name()).require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 36, ""));
		in("Job").def(context("Concept").allow(multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE), parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), name()).require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, ""), _plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 38, ""));
		in("Mission").def(context("Concept").allow(multiple("Mission.Duty", Tag.TERMINAL_INSTANCE), name()).require(_parameter("place", new String[]{"Place"}, false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 41, ""));
		in("Mission.Duty").def(context("Concept").allow(name()).require(_parameter("value", "native", false, 0, "Action#public void execute()", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 44, ""));
		in("Place").def(context("Concept").allow(multiple("Place", Tag.TERMINAL_INSTANCE), parameter("onArrive", "native", false, 1, "Event#public void execute()", "TERMINAL"), parameter("onExit", "native", false, 2, "Event#public void execute()", "TERMINAL"), name(), facet("Junction").allow(multiple("Junction.Exit", Tag.TERMINAL_INSTANCE)), facet("Initial"), facet("Terminal").allow(parameter("mode:word", new String[]{"Terminate", "Abort"}, false, 0, ""))).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 48, ""));
		in("Initial").def(context("Concept").allow(name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 56, ""));
		in("Terminal").def(context("Concept").allow(parameter("mode:word", new String[]{"Terminate", "Abort"}, false, 0, "", "TERMINAL"), name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 59, ""));
		in("Junction").def(context("Concept").allow(multiple("Junction.Exit", Tag.TERMINAL_INSTANCE), name()).require(_plate()).assume(isFacetInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 63, ""));
		in("Junction.Exit").def(context("Concept").allow(multiple("Junction.Exit.OnTimeout", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.OnResponse", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.OnTimeout", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.OnResponse", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.LogStep", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.Delegate", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.LogStep", Tag.TERMINAL_INSTANCE), multiple("Junction.Exit.Delegate", Tag.TERMINAL_INSTANCE), name()).require(_parameter("place", new String[]{"Place"}, false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 64, ""));
		in("Junction.Exit.OnTimeout").def(context("Concept").allow(name()).require(_parameter("value", "measure", false, 0, "Duration", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 67, ""));
		in("Junction.Exit.OnResponse").def(context("Concept").allow(name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 69, ""));
		in("Junction.Exit.LogStep").def(context("Concept").allow(name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 72, ""));
		in("Junction.Exit.Delegate").def(context("Concept").allow(name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 73, ""));
		in("State").def(context("Concept").allow(multiple("Form", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("Table", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("Poll", Tag.FACET_INSTANCE, Tag.TERMINAL_INSTANCE), multiple("State.Workmap", Tag.PROTOTYPE), name()).require(_plate()).assume(isFacetInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 75, ""));
		in("State.Workmap").def(context("Concept").allow(name()).require(_plate()).assume(isPrototype()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Tasks.tara", 77, ""));
		in("Sequence").def(context("Concept").allow(parameter("value", "integer", false, 0, "", "TERMINAL"), name()).require(_plate()).assume(isMain(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 6, ""));
		in("Role").def(context("Concept").allow(single("ServiceRole", Tag.FACET_INSTANCE), single("FeederRole", Tag.FACET_INSTANCE), single("UserRole", Tag.FACET_INSTANCE), parameter("from", "date", false, 1, "", "TERMINAL"), parameter("to", "date", false, 2, "", "TERMINAL"), parameter("invalidForEditing", "boolean", false, 3, "", "TERMINAL"), name(), facet("FeederRole").require(_parameter("ontologies", "string", true, 0, "", "REQUIRED")), facet("ServiceRole").require(_parameter("ontologies", "string", true, 0, "", "REQUIRED")), facet("UserRole")).require(_parameter("label", "string", false, 0, "", "REQUIRED"), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 9, "Un rol es una competencia necesaria para realizar un trabajo. Los roles se pueden asignar tanto a trabajadores como a unidades de negocio de la federación\n Existe la posibilidad de limitar el role para que no pueda editar entidades del sistema de información usando la variable invalidForEditing"));
		in("User").def(context("Concept").allow(multiple("Role"), name()).require(_parameter("username", "string", false, 0, "", "TERMINAL"), _parameter("name", "string", false, 1, "", "TERMINAL"), _parameter("email", "string", false, 2, "", "TERMINAL"), _parameter("photo", "file", false, 3, "[pngjpg]", "TERMINAL"), _parameter("environments", new String[]{"Environment"}, true, 4, "", "REQUIRED", "TERMINAL"), _plate()).assume(isMain(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 20, ""));
		in("Thesaurus").def(context("Concept").allow(multiple("Thesaurus.Term", Tag.TERMINAL_INSTANCE), multiple("Thesaurus.FromRoles", Tag.TERMINAL_INSTANCE), multiple("Thesaurus.FromCollectable", Tag.TERMINAL_INSTANCE), name()).require(_plate()).assume(isMain(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 29, "Un tesauro es un conjunto de términos y representa el vocabulario de la unidad de negocio"));
		in("Thesaurus.Term").def(context("Concept").allow(multiple("Thesaurus.Term", Tag.TERMINAL_INSTANCE), name()).require(_parameter("key", "string", false, 0, "", "REQUIRED", "TERMINAL"), _parameter("label", "string", false, 1, "", "REQUIRED", "TERMINAL"), _parameter("tags", "string", true, 2, "", "TERMINAL"), _parameter("category", "boolean", false, 3, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 32, "Cada término se define con su clave y su título.\nPara filtrar términos o consultar metadatos de un término. Para representar un metadato se usa la sintaxis \"tag:value\"\nPara indicar que un término es una categoría. Las categorías no son seleccionables. Se usan para hacer agrupaciones de términos"));
		in("Thesaurus.FromRoles").def(context("Concept").allow(name()).require(_parameter("roles", new String[]{"Role"}, true, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 44, "El tesauro se genera a partir de unos roles"));
		in("Thesaurus.FromCollectable").def(context("Concept").allow(name()).require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 48, ""));
		in("Entity.Toolbar").def(context("Concept").allow(multiple("Entity.Toolbar.Operation"), name(), facet("RestrictedByRoles").require(_parameter("roles", new String[]{"Role"}, true, 0, ""))).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 61, ""));
		in("Entity.Toolbar.Operation").def(context("Concept").allow(parameter("dialog", new String[]{"Dialog"}, false, 2, ""), parameter("onVisible", "native", false, 4, "Event#public void execute()"), parameter("onEnabled", "native", false, 5, "Event#public void execute()"), name()).require(_parameter("label", "string", false, 0, ""), _parameter("description", "string", false, 1, ""), _parameter("execute", "native", false, 3, "Action#public void execute()"), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 62, ""));
		in("Entity.Message").def(context("Concept").allow(name()).require(_parameter("message", "string", false, 0, ""), _parameter("when:word", new String[]{"New", "ReadOnly", "Invalid"}, false, 1, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 70, ""));
		in("Node").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Node", Tag.MAIN), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), multiple("Multiple", Tag.FACET_INSTANCE), multiple("Dialog", Tag.MAIN, Tag.SINGLE), multiple("Document", Tag.MAIN), multiple("Node.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Node.Rule", Tag.TERMINAL_INSTANCE, Tag.FEATURE_INSTANCE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("container", new String[]{"Node"}, false, 7, ""), name(), facet("Prototypable").require(_parameter("entities", new String[]{"Node", "Dialog", "Document", "Field"}, true, 0, "")), facet("ReadOnly"), facet("Exportable").require(_parameter("onExport", "native", false, 0, "Event#public void execute()")), facet("Collectable").allow(multiple("Collectable.Index", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Collectable.Thesaurus", Tag.FEATURE_INSTANCE, Tag.SINGLE)), facet("Extensible"), facet("Georeferenced").require(_parameter("wktPlace", "string", false, 0, "")), facet("Service").require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, "")).allow(parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE)), facet("Process").require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, "")).allow(parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE), multiple("Process.State", Tag.TERMINAL_INSTANCE, Tag.SINGLE, Tag.REQUIRED), multiple("Process.History", Tag.TERMINAL_INSTANCE, Tag.SINGLE, Tag.REQUIRED), multiple("Process.WorkMap", Tag.FEATURE_INSTANCE, Tag.REQUIRED)), facet("RestrictedByOwner"), facet("Target", "Collectable"), facet("Environment"), facet("Importable").require(_parameter("onImport", "native", false, 0, "Event#public void execute()")), facet("Job").require(_parameter("comments", "string", false, 1, ""), _parameter("status:word", new String[]{"Created", "Waiting", "Pending", "Finished", "Aborted"}, false, 2, "")).allow(parameter("urgent", "boolean", false, 0, ""), parameter("isBackground", "boolean", false, 3, ""), multiple("Task.Auditory", Tag.SINGLE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("Task.Suggestion", Tag.SINGLE, Tag.TERMINAL_INSTANCE)), facet("RestrictedByRoles")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 74, "Un nodo es una entidad que contiene información relacionada con el espacio de negocio"));
		in("Node.View").def(context("Concept").allow(single("Node.View.HideBreadCrumbs", Tag.SINGLE, Tag.TERMINAL_INSTANCE), parameter("refresh", "native", false, 2, "Action#public void execute()", "TERMINAL"), name(), facet("Form").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE)), facet("PrototypeList").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED"), _parameter("nature:word", new String[]{"Shared", "Owned"}, false, 4, "")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("RevisionList"), facet("Poll").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE)), facet("Collection").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("PointsMap").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED"), _parameter("wktCenter", "string", false, 4, "")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("HeatMap").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED"), _parameter("wktCenter", "string", false, 4, "")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("Folder").require(_parameter("documents", new String[]{"Document"}, true, 0, "", "REQUIRED")), facet("HyperLink").require(_parameter("entity", new String[]{"Node", "Dialog", "Document", "Field"}, true, 0, "", "REQUIRED")), facet("Catalog").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("FollowerList")).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _parameter("help", "file", false, 1, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 85, ""));
		in("Node.View.HideBreadCrumbs").def(context("Concept").allow(name()).require(_plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 90, ""));
		in("Node.Rule").def(context("Concept").allow(name(), facet("ViewRule").require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED"), _parameter("to", new String[]{"Node.View"}, true, 1, "", "REQUIRED"), _parameter("flags:word", new String[]{"Hidden"}, false, 2, "", "REQUIRED")).allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE)), facet("NodeRule").require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED"), _parameter("flags:word", new String[]{"ReadOnly", "Invalid"}, false, 1, "", "REQUIRED")).allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE)), facet("OperationRule").require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED"), _parameter("to", new String[]{"Entity.Toolbar.Operation"}, true, 1, "", "REQUIRED"), _parameter("flags:word", new String[]{"Hidden", "Disabled"}, false, 2, "", "REQUIRED")).allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE)), facet("HyperLinkRule").require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED"), _parameter("to", new String[]{"HyperLink"}, true, 1, "", "REQUIRED"), _parameter("flags:word", new String[]{"Hidden"}, false, 2, "", "REQUIRED")).allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE)), facet("FieldRule").require(_parameter("when", "native", false, 0, "Rule#public boolean execute()", "REQUIRED"), _parameter("to", new String[]{"Text", "Memo", "Number", "Check", "Date", "Picture", "File", "Link", "Serial", "Select", "Section"}, true, 1, "", "REQUIRED"), _parameter("flags:word", new String[]{"Required", "ReadOnly", "Invalid", "Hidden"}, false, 2, "", "REQUIRED")).allow(multiple("Rule.ListenTo", Tag.TERMINAL_INSTANCE))).require(_plate()).assume(isTerminalInstance(), isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 92, ""));
		in("Dialog").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), multiple("Multiple", Tag.FACET_INSTANCE), multiple("Dialog.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 0, "Event#public void execute()"), parameter("onOpen", "native", false, 1, "Event#public void execute()"), parameter("onClose", "native", false, 2, "Event#public void execute()"), parameter("onSave", "native", false, 3, "Event#public void execute()"), parameter("onChange", "native", false, 4, "Event#public void execute()"), parameter("onRemove", "native", false, 5, "Event#public void execute()"), name(), facet("ReadOnly"), facet("RestrictedByRoles"), facet("RestrictedByOwner")).require(_parameter("label", "string", false, 6, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 94, ""));
		in("Dialog.View").def(context("Concept").allow(parameter("refresh", "native", false, 1, "Action#public void execute()", "TERMINAL"), name(), facet("Form").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE)), facet("Poll").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE))).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 99, ""));
		in("Document").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Document.Template", Tag.FEATURE_INSTANCE), multiple("Document.SignatureFolder", Tag.FEATURE_INSTANCE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("value", "file", false, 7, "", "TERMINAL"), parameter("signatures", "string", true, 8, "", "TERMINAL"), name(), facet("ReadOnly"), facet("RestrictedByRoles"), facet("RestrictedByOwner")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 103, "Un documento es un tipo entidad que se utiliza permitir la interoperabilidad con otra unidad de negocio"));
		in("Document.Template").def(context("Concept").allow(name()).require(_parameter("template", "file", false, 0, "[doxodt]"), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 108, "Nombre del fichero de la plantilla en formato DOCX/ODT/PDF. El fichero debe existir en la carpeta \"res\""));
		in("Document.SignatureFolder").def(context("Concept").allow(multiple("Document.SignatureFolder.Signature", Tag.REQUIRED), parameter("position:word", new String[]{"TopOfDocument", "NewPageAtTopOfDocument", "BottomOfDocument", "NewPageAtBottomOfDocument"}, false, 0, ""), parameter("onSignsComplete", "native", false, 1, "Event#public void execute()"), name()).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 112, "Esta propiedad se utiliza cuando el documento DEBE firmarse para garantizar la seguridad jurídica\nTopOfDocument -> Las firmas aparecerán al principio del documento. Se ha de reservar el espacio desde el principio de página hasta la mitad de la página\n               NewPageAtTopOfDocument -> Las firmas aparecerán en una página adicional al principio del documento\n               BottomOfDocument -> Las firmas aparecerán al final del documento. Se ha de reservar el espacio desde mitad de la página hasta el final de la página\n               NewPageAtBottomOfDocument -> Las firmas aparecerán en una página adicional al final del documento"));
		in("Document.SignatureFolder.Signature").def(context("Concept").allow(multiple("Document.SignatureFolder.Signature.After"), parameter("onSign", "native", false, 1, "SignEvent#public void onSign(User user)"), parameter("repeat", "integer", false, 2, "times"), name(), facet("Multiple").require(_parameter("times", "integer", false, 0, "")).allow(multiple("Multiple.Boundary")), facet("RestrictedByRoles").require(_parameter("roles", new String[]{"Role"}, true, 0, ""))).require(_parameter("label", "string", false, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 120, ""));
		in("Document.SignatureFolder.Signature.After").def(context("Concept").allow(name()).require(_parameter("signature", new String[]{"Document.SignatureFolder.Signature"}, false, 0, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 124, "Precedencia de la firma"));
		in("Field.View").def(context("Concept").allow(parameter("refresh", "native", false, 1, "Action#public void execute()", "TERMINAL"), name(), facet("Collection", "Link").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("PointsMap", "Link").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED"), _parameter("wktCenter", "string", false, 4, "")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE)), facet("History").require(_parameter("datastore", "string", false, 0, "")), facet("Catalog", "Link").require(_parameter("type", new String[]{"Collectable"}, false, 0, "", "REQUIRED")).allow(parameter("mode:word", new String[]{"Table", "List", "Document"}, false, 1, ""), parameter("filter", "native", false, 2, "Filter#public boolean accept(Entry entry)"), parameter("select", "native", false, 3, "Select#public boolean accept(Entry entry)"), multiple("Set.Sort", Tag.TERMINAL_INSTANCE))).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 131, ""));
		in("Text").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Text.Pattern", Tag.FEATURE_INSTANCE), multiple("Text.Length", Tag.FEATURE_INSTANCE), multiple("Text.Format", Tag.FEATURE_INSTANCE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "string", false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 135, "Esta propiedad se utiliza para incluir un campo texto en un formulario"));
		in("Text.Pattern").def(context("Concept").allow(name(), facet("RegularExpression").require(_parameter("regexp", "string", false, 0, "")).allow(multiple("RegularExpression.Meta")), facet("Email"), facet("Url"), facet("Password")).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 139, ""));
		in("Text.Length").def(context("Concept").allow(parameter("min", "natural", false, 0, ""), name()).require(_parameter("max", "natural", false, 1, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 141, "Esta propiedad se utiliza para definir la longitud máxima/mínima del campo"));
		in("Text.Format").def(context("Concept").allow(name()).require(_parameter("mode:word", new String[]{"Uppercase", "Lowercase", "Sentence", "Title"}, false, 0, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 146, "Esta propiedad se utiliza para indicar cómo se edita el texto\nUppercase -> Todo en mayúsculas\n                   Lowercase -> Todo en minúsculas\n                   Sentence -> En mayúsculas sólo la primera letra de cada frase\n                   Title -> En mayúsculas sólo la primera letra de cada palabra"));
		in("Memo").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Memo.Length", Tag.FEATURE_INSTANCE), multiple("Memo.Format", Tag.FEATURE_INSTANCE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "string", false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 154, "Esta propiedad se utiliza para incluir un campo descripción en un formulario"));
		in("Memo.Length").def(context("Concept").allow(parameter("min", "natural", false, 0, ""), name()).require(_parameter("max", "natural", false, 1, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 158, "Se utiliza para definir la longitud máxima/mínima del campo"));
		in("Memo.Format").def(context("Concept").allow(parameter("mode:word", new String[]{"Plain", "RichText"}, false, 0, ""), name()).require(_plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 163, "Indica el formato con el que se permitirá almacenar la información"));
		in("Number").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Currency", Tag.FACET_INSTANCE), multiple("Percent", Tag.FACET_INSTANCE), multiple("Number.Metric", Tag.FEATURE_INSTANCE), multiple("Number.Range", Tag.FEATURE_INSTANCE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "double", false, 8, "", "TERMINAL"), parameter("edition:word", new String[]{"Button", "Slider"}, false, 9, ""), name(), facet("Multiple"), facet("Percent").allow(multiple("Percent.Range")), facet("Currency").require(_parameter("symbol", "string", false, 0, ""))).require(_parameter("label", "string", false, 0, ""), _parameter("pattern", "string", false, 10, "", "REQUIRED"), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 167, "Esta propiedad se utiliza para incluir un campo numérico en un formulario\nPermite escoger el tipo de componente que se usará para la edición del campo\nExpresión regular para definir el formato con el que se representa el número"));
		in("Number.Metric").def(context("Concept").allow(name()).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 178, ""));
		in("Number.Range").def(context("Concept").allow(name()).require(_parameter("min", "integer", false, 0, ""), _parameter("max", "integer", false, 1, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 181, "Se utiliza para definir el rango de valores que se permite introducir"));
		in("Check").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "boolean", false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 186, "Esta propiedad se utiliza para incluir un campo booleano en un formulario"));
		in("Date").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Date.Precision", Tag.FEATURE_INSTANCE, Tag.REQUIRED), multiple("Date.Scope", Tag.FEATURE_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "date", false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 190, "Esta propiedad se utiliza para incluir un campo fecha en un formulario"));
		in("Date.Precision").def(context("Concept").allow(parameter("value:word", new String[]{"Years", "Months", "Days", "Hours", "Minutes", "Seconds"}, false, 0, "", "TERMINAL", "REQUIRED"), name()).require(_parameter("allowLessPrecision", "boolean", false, 1, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 194, "Indica la precisión con la que se desea guardar la fecha\nSe usa para indicar si permitimos a los usuarios que introduzcan una fecha con una precisión más flexible, que no tengan que indicar la fecha con la precisión al completo"));
		in("Date.Scope").def(context("Concept").allow(multiple("Date.Scope.Near"), name()).require(_parameter("value:word", new String[]{"Future", "Past", "Both"}, false, 0, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 200, "Permite definir el tipo de fecha a seleccionar\nFuture -> Permitirá seleccionar fechas posteriores a la fecha actual\n                   Past -> Permitirá seleccionar fechas anteriores a la fecha actual\n                   Both -> No pone limitaciones en cuanto a la fecha que es seleccionable"));
		in("Date.Scope.Near").def(context("Concept").allow(name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 207, "Permite indicar que la fecha a introducir es una fecha cercana. Por defecto, en caso de no indicarlo con la propiedad \"Near\", se considera que es una fecha lejana."));
		in("Picture").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Picture.AspectRatio"), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "file", false, 8, "[jpgpng]", "TERMINAL"), parameter("size", "measure", false, 9, "FileSize"), parameter("isProfilePhoto", "boolean", false, 10, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 211, "Esta propiedad se utiliza para incluir un campo imagen en un formulario\nSe utiliza para definir el tamaño máximo en megas que se permite para la imagen elegida por el usuario final\nSe utiliza para indicar que esta imagen se usará como foto del perfil"));
		in("Picture.AspectRatio").def(context("Concept").allow(name()).require(_parameter("width", "natural", false, 0, ""), _parameter("height", "natural", false, 1, ""), _plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 219, "Se utiliza para definir el tamaño de la imagen"));
		in("File").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "file", false, 8, "", "TERMINAL"), parameter("size", "measure", false, 9, "FileSize"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 224, "Esta propiedad se utiliza para incluir un campo fichero en un formulario\nSe utiliza para definir el tamaño máximo en megas que se permite para el fichero elegido por el usuario final"));
		in("Link").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Link.AllowEdit"), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("target", new String[]{"Target"}, false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), redefine("target", "Target"), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 230, "Esta propiedad se utiliza para incluir un campo vínculo en un formulario"));
		in("Link.AllowEdit").def(context("Concept").allow(name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 234, "Se utiliza para permitir que el usuario pueda editar el target vinculado"));
		in("Serial").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Serial.Format", Tag.FEATURE_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", "string", false, 9, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _parameter("sequence", new String[]{"Sequence"}, false, 8, "", "REQUIRED"), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 238, "Esta propiedad se utiliza para incluir un campo serie en un formulario"));
		in("Serial.Format").def(context("Concept").allow(name()).require(_parameter("value", "string", false, 0, ""), _plate()).assume(isFeatureInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 243, "Ejemplo: \"A%4S/%2Y\", devuelve como resultado la letra A seguido de 10 digitos extraidos de la serie, luego una barra y el año con dos dígitos. Un ejemplo sería A0001/11"));
		in("Select").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Select.AllowOther"), multiple("Select.SelectView", Tag.FEATURE_INSTANCE, Tag.REQUIRED, Tag.TERMINAL_INSTANCE), single("Thesaurus", Tag.MAIN, Tag.TERMINAL_INSTANCE, Tag.SINGLE), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("value", new String[]{"Thesaurus.Term"}, false, 8, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _parameter("source", "native", false, 9, "Source#public void getSource()"), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 247, "Esta propiedad se utiliza para incluir un campo selección en un formulario"));
		in("Select.AllowOther").def(context("Concept").allow(name()).require(_plate()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 253, "Esta propiedad se utiliza cuando se desea que el usuario pued añadir texto libre"));
		in("Select.SelectView").def(context("Concept").allow(parameter("refresh", "native", false, 1, "Action#public void execute()", "TERMINAL"), parameter("flatten:word", new String[]{"None", "All", "Level", "Leaf", "Internal"}, false, 2, "", "TERMINAL"), parameter("depth", "natural", false, 3, "", "TERMINAL"), parameter("showKey", "boolean", false, 6, "", "TERMINAL"), name(), facet("Collection"), facet("PointsMap"), facet("History"), facet("Catalog")).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _parameter("root", "native", false, 4, "Source#public void getSource()", "TERMINAL"), _parameter("filter", "native", false, 5, "Filter#public boolean accept(Entry entry)", "TERMINAL"), _plate()).assume(isFeatureInstance(), isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 256, "Vista de un campo select\nNone -> Se toman sólo los términos del primer nivel\n                   All -> Se toman recursivamente todos los términos descendientes\n                   Level -> Se toman recursivamente todos los términos descendientes hasta la profundidad indicada por el atributo \"depth\"\n                   Leaf -> Se toman recursivamente todos los nodos hoja\n                   Internal -> Se toman recursivamente todos los nodos no hoja\nProfundidad de descendientes que se desea\nTérmino a partir del cual se cargan los términos hijos\nSe utiliza cuando se desea mostrar al usuario la clave de los términos"));
		in("Section").def(context("Concept").allow(multiple("Entity.Toolbar", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Entity.Message", Tag.FEATURE_INSTANCE, Tag.SINGLE), multiple("Field.View", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), multiple("Text", Tag.MAIN), multiple("Memo", Tag.MAIN), multiple("Number", Tag.MAIN), multiple("Check", Tag.MAIN), multiple("Date", Tag.MAIN), multiple("Picture", Tag.MAIN), multiple("File", Tag.MAIN), multiple("Link", Tag.MAIN), multiple("Serial", Tag.MAIN), multiple("Select", Tag.MAIN), multiple("Section", Tag.MAIN), multiple("Multiple", Tag.FACET_INSTANCE), multiple("Section.SectionView", Tag.TERMINAL_INSTANCE, Tag.REQUIRED), parameter("onCreate", "native", false, 1, "Event#public void execute()"), parameter("onOpen", "native", false, 2, "Event#public void execute()"), parameter("onClose", "native", false, 3, "Event#public void execute()"), parameter("onSave", "native", false, 4, "Event#public void execute()"), parameter("onChange", "native", false, 5, "Event#public void execute()"), parameter("onRemove", "native", false, 6, "Event#public void execute()"), parameter("validate", "native", false, 7, "Action#public void execute()"), parameter("extensible", "boolean", false, 8, "", "TERMINAL"), parameter("conditional", "boolean", false, 9, "", "TERMINAL"), name(), facet("Multiple")).require(_parameter("label", "string", false, 0, ""), _plate()).assume(isMain()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 272, "Permite definir un campo sección en un formulario\nCuando una sección es extensible, tiene una vista resumida y otra extendida. Aquellos campos que se declaren dentro de la sección con la propiedad \"extended\" solo se mostrarán en la versión extendida\nCuando una sección es condicional. En este campo se guarda un valor booleano, de forma que la sección oculta los campos que contiene cuando el valor es \"false\", o los muestra cuando el valor es \"true\""));
		in("Section.SectionView").def(context("Concept").allow(parameter("refresh", "native", false, 1, "Action#public void execute()", "TERMINAL"), name(), facet("Table").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE)), facet("Form").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE)), facet("Poll").allow(multiple("FieldView.Display", Tag.REQUIRED, Tag.TERMINAL_INSTANCE), multiple("FieldView.Disable", Tag.TERMINAL_INSTANCE))).require(_parameter("label", "string", false, 0, "", "TERMINAL"), _plate()).assume(isTerminalInstance()).doc("/Users/oroncal/workspace/sandbox/monetv4/Engine/model/Entities.tara", 282, ""));
	}

	@Override
	public String languageName() {
		return "Monet";
	}

	@Override
	public Locale locale() {
		return Locale.ENGLISH;
	}

	@Override
	public boolean isTerminalLanguage() {
		return false;
	}
}
