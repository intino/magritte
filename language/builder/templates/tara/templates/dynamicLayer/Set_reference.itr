def type(variable & reference & concept & multiple & owner) !type(inherited) !type(overriden) trigger(set)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = objects.stream().map(o -> (tara.magritte.Concept) o).collect(java.util.stream.Collectors.toList());
end

def type(variable & reference & concept & owner) !type(inherited) !type(overriden) trigger(set)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = (tara.magritte.Concept) objects.get(0);
end

def type(variable & reference & multiple) !type(inherited) !type(concept) !type(overriden) type(owner) trigger(set)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = objects.stream().map(o -> (tara.magritte.Reference) o).collect(java.util.stream.Collectors.toList());
end

def type(variable) type(reference) type(owner) !type(inherited) !type(concept) !type(overriden) trigger(set)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = (tara.magritte.Reference) objects.get(0);
end