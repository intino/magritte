def type(Variable & Word & multiple) !type(outDefined) !slot(values) !slot(wordvalues)  trigger(parameters)
	List<$type+firstUpperCase> $name+javaValidWord
end

def type(Variable & Word & multiple & OutDefined) !slot(values) !slot(wordvalues) trigger(parameters)
	List<$generatedLanguage+LowerCase.rules.$rule+externalWordClass> $name+javaValidWord
end

def type(Variable & Word & outDefined) !slot(values) !slot(wordvalues) trigger(parameters)
	$generatedLanguage+LowerCase.rules.$rule+externalWordClass $name+javaValidWord
end

def type(Variable & Word) !type(OutDefined | values | wordvalues) trigger(parameters)
	$qn.$type+firstUpperCase $name+javaValidWord
end

def type(Variable & reactive & multiple) !slot(values) !slot(wordvalues) trigger(parameters)
	tara.magritte.Expression<java.util.List<$type+variableTypeList+reference>> $name+firstLowerCase
end

def type(Variable & reactive) !type(multiple) !slot(values) !slot(wordvalues) trigger(parameters)
	tara.magritte.Expression<$type+variableTypeList+reference> $name+firstLowerCase+javaValidWord
end

def type(Variable & function) !slot(values) !slot(wordvalues) trigger(parameters)
	$generatedLanguage+LowerCase.functions.$rule+interfaceClass $name+firstLowerCase+javaValidWord
end

def type(Variable & multiple) !slot(values) !slot(wordvalues) !type(concept) trigger(parameters)
	java.util.List<$type+variableTypeList+reference> $name+firstLowerCase+javaValidWord
end

def type(Variable) !type(concept) !slot(values) !slot(wordvalues) !type(multiple) trigger(parameters)
	$type+reference+variableType $name+firstLowerCase+javaValidWord
end

def type(Variable & concept & multiple) !slot(values) !slot(wordvalues) trigger(parameters)
	java.util.List<tara.magritte.Concept> $name+firstLowerCase+javaValidWord
end

def type(Variable & concept) !slot(values) !slot(wordvalues) !type(multiple) trigger(parameters)
	tara.magritte.Concept $name+firstLowerCase+javaValidWord
end

def type(Variable & reference & multiple) type(concept) !slot(values) !slot(wordvalues) trigger(assign)
	newElement.instance().set(newElement, "$name+firstLowerCase", $name+javaValidWord);
end

def type(Variable & reference & multiple) !type(concept) !slot(values) !slot(wordvalues) trigger(assign)
	newElement.instance().set(newElement, "$name+firstLowerCase", $name+javaValidWord.stream().map(r -> new tara.magritte.Reference(r.instance())).collect(java.util.stream.Collectors.toList()));
end

def type(Variable & reference) !type(concept) !slot(values) !slot(wordvalues) trigger(assign)
	newElement.instance().set(newElement, "$name+firstLowerCase", java.util.Collections.singletonList(new tara.magritte.Reference($name+javaValidWord.instance())));
end

def	type(variable & multiple) !type(concept) !slot(values) !slot(wordvalues) trigger(assign)
	newElement.instance().set(newElement, "$name+firstLowerCase",  $name+firstLowerCase+javaValidWord);
end

def	type(variable) !type(multiple) !slot(values) !slot(wordvalues) trigger(assign)
	newElement.instance().set(newElement, "$name+firstLowerCase", java.util.Collections.singletonList($name+firstLowerCase+javaValidWord));
end

def	type(variable) !slot(values) !slot(wordvalues) trigger(name)
	$name+javaValidWord
end