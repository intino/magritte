def type(variable & multiple & reference) type(concept) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = tara.magritte.loaders.ConceptLoader.load(objects, _model());
end

def type(variable & reference) type(concept) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = tara.magritte.loaders.ConceptLoader.load(objects, _model()).get(0);
end

def type(variable & multiple & reference) !type(inherited) !type(concept) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = tara.magritte.loaders.ReferenceLoader.load(objects, (tara.magritte.DynamicModel) _model());
end

def type(variable) !type(inherited) !type(concept) !type(overriden) type(owner) type(reference) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+firstLowercase = tara.magritte.loaders.ReferenceLoader.load(objects, (tara.magritte.DynamicModel) _model()).get(0);
end