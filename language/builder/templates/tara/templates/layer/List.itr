
def type(Variable & multiple) !type(inherited) !type(overriden) type(owner) trigger(list)
	map.put("$name+firstLowerCase", $name+firstLowerCase);
end

def type(Variable) type(reference) !type(inherited) !type(overriden) type(owner) trigger(list)
	map.put("$name+firstLowerCase", this.$name != null ? new java.util.ArrayList(java.util.Collections.singletonList($name+firstLowerCase)) : null);
end

def type(Variable) type(function) !type(inherited) !type(overriden) type(owner) trigger(list)
	map.put("$name+firstLowerCase", this.$name != null ? new java.util.ArrayList(java.util.Collections.singletonList($name+firstLowerCase)) : null);
end

def type(Variable) !type(inherited) !type(overriden) type(owner) trigger(list)
	map.put("$name+firstLowerCase", new java.util.ArrayList(java.util.Collections.singletonList($name+firstLowerCase)));
end

def type(Node) !type(inherited) !type(overriden) !type(overriden) type(owner) type(single) trigger(list)
	if ($name+firstLowerCase != null) instances.add($name+firstLowerCase._instance());
end

def type(Node) !type(inherited) !type(overriden) type(owner) trigger(list)
	$name+firstLowerCase~List.stream().forEach(c -> instances.add(c._instance()));
end
