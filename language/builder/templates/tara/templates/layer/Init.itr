def type(variable & word) type(multiple) type(outDefined) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.WordLoader.load(objects, $generatedLanguage+LowerCase.rules.$rule+externalWordClass.class);
end

def type(variable & word) type(outDefined) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.WordLoader.load(objects, $generatedLanguage+LowerCase.rules.$rule+externalWordClass.class).get(0);
end

def type(variable & word) type(multiple) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.WordLoader.load(objects, $type.class);
end

def type(variable & word) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.WordLoader.load(objects, $type.class).get(0);
end

def type(variable & reactive) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.FunctionLoader.load(objects, this, tara.magritte.Expression.class).get(0);
end

def type(variable & function) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.FunctionLoader.load(objects, this, $generatedLanguage.functions.$rule+interfaceClass~.class).get(0);
end

def type(variable) type(time | Date) type(multiple) !type(concept) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.$type+Capitalize~Loader.load(objects);
end

def type(variable) type(time | Date) !type(multiple) !type(concept) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.$type+Capitalize~Loader.load(objects).get(0);
end

def type(variable & resource) !type(multiple) !type(concept) !type(inherited) !type(overriden) type(owner) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.ResourceLoader.load(objects, model()).get(0);
end

def type(variable & resource) type(owner) type(multiple) !type(inherited) !type(overriden) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.ResourceLoader.load(objects, model());
end

def type(variable) type(owner) type(multiple) !type(inherited) !type(overriden) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.$type+variableTypeList~Loader.load(objects);
end

def type(variable) type(owner) !type(multiple) !type(concept) !type(inherited) !type(overriden) trigger(init)
	if (name.equalsIgnoreCase("$name+firstLowercase")) this.$name+javaValidWord+firstLowercase = tara.magritte.loaders.$type+variableTypeList~Loader.load(objects).get(0);
end