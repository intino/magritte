def type(variable & word & outDefined & multiple) slot(externalClass) !type(inherited | overriden | owner) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(java.util.List<$language.rules.$externalClass> values) {
		this._$containerName+firstLowerCase.$name+javaValidWord(values);
	}
end

def type(Variable & Word & outDefined & multiple) !type(inherited | overriden | owner | concept) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(java.util.List<$generatedLanguage.rules.$rule+externalWordClass> values) {
		this._$containerName+firstLowerCase.$name+javaValidWord(values);
	}
end


def type(variable & word & outDefined) slot(externalClass) !type(inherited | overriden | owner) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($language.rules.$externalClass value) {
		this._$containerName+firstLowerCase.$name+javaValidWord(value);
	}
end

def type(Variable & Word & outDefined) !type(inherited | overriden | owner | concept) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($generatedLanguage.rules.$rule+externalWordClass value) {
		this._$containerName+firstLowerCase.$name+javaValidWord(value);
	}
end

def type(variable & word) !type(multiple | owner | reactive | final) trigger(setter)
	public void $name+javaValidWord($qn+reference.$name+javaValidWord+reference value) {
		this._$containerName+firstLowerCase.$name+firstLowerCase+javaValidWord(value);
	}
end

def type(variable & resource) !type(multiple | owner | reactive | final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($type+variableType value, String destiny) {
		this._$containerName+firstLowerCase.$name+firstLowerCase+javaValidWord(value, destiny);
	}
end

def type(variable) !type(multiple | owner | concept | function | resource | reactive | final | word) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($type+variableType value) {
		this._$containerName+firstLowerCase.$name+firstLowerCase+javaValidWord(value);
	}
end

def type(variable & Concept) !type(multiple) !type(owner) !type(function) !type(reactive) !type(final) !type(Word) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(tara.magritte.Concept value) {
		this._$containerName+firstLowerCase.$name+firstLowerCase+javaValidWord(value);
	}
end

----- OWN SETTERS -----

def type(variable & Word & outDefined) !type(target | inherited | overriden | multiple | final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($generatedLanguage+LowerCase.rules.$rule+externalWordClass value) {
		this.$name+firstLowerCase+javaValidWord = value;
	}
end

def type(variable & Word) !type(target | inherited | overriden | multiple | final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord([$qn+reference.]$name+javaValidWord+reference value) {
		this.$name+firstLowerCase+javaValidWord = value;
	}
end

def type(variable & resource) !type(target | inherited | overriden | reactive | multiple | final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(java.net.URL url, String destiny) {
		this.$name+firstLowerCase+javaValidWord = graph().save(url, destiny, this.$name+firstLowerCase+javaValidWord, node());
    }

    public void $name+firstLowerCase+javaValidWord(java.io.InputStream stream, String destiny) {
		this.$name+firstLowerCase+javaValidWord = graph().save(stream, destiny, this.$name+firstLowerCase+javaValidWord, node());
	}

    public java.io.OutputStream $name+firstUpperCase+javaValidWord(String destiny) {
		this.$name+firstLowerCase+javaValidWord = graph().save(null, destiny, this.$name+firstLowerCase+javaValidWord, node());
		return this.$name+firstLowerCase+javaValidWord.openConnection().getOutputStream();
	}
end

def type(variable & resource & multiple) !type(target | inherited | overriden | reactive | final) trigger(setter)
	public void add$name+firstUpperCase(java.net.URL url, String destiny) {
		java.net.URL newElement = graph().save(url, destiny, null, node());
		this.$name+firstLowerCase+javaValidWord.add(newElement);
    }

    public void add$name+firstUpperCase(java.io.InputStream stream, String destiny) {
		java.net.URL newElement = graph().save(stream, destiny, null, node());
		this.$name+firstLowerCase+javaValidWord.add(newElement);
	}

    public java.io.OutputStream add$name+firstUpperCase+javaValidWord(String destiny) {
    	java.net.URL newElement = graph().save(null, destiny, null, node());
    	this.$name+firstLowerCase+javaValidWord.add(newElement);
		return newElement.openConnection().getOutputStream();
	}
end

def type(Variable) !type(inherited | concept | overriden | function | reactive | multiple | final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($type+variableType value) {
		this.$name+firstLowerCase+javaValidWord = value;
	}
end

def type(variable & reference & concept & multiple & owner) !type(final | inherited | overriden) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(java.util.List<tara.magritte.Concept> value) {
		this.$name+javaValidWord+firtLowercase = value;
	}
end

def type(variable & reference & concept & owner) !type(final) !type(inherited) !type(overriden) !type(multiple) trigger(setter)
	public void $name+firstLowerCase+javaValidWord(tara.magritte.Concept value) {
		this.$name+javaValidWord+firtLowercase = value;
	}
end

def type(Node & single & owner) !type(inherited) !type(overriden) !type(final) trigger(setter)
	public void $name+firstLowerCase+javaValidWord($qn+reference value) {
		this.$name+firstLowerCase+javaValidWord = value;
	}
end

def type(Node) trigger(setter)
end